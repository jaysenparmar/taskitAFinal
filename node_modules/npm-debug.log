0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   'nodemailer' ]
2 info using npm@1.3.21
3 info using node@v0.10.24
4 verbose readDependencies using package.json deps
5 verbose cache add [ 'nodemailer@~0.6.0', null ]
6 verbose cache add name=undefined spec="nodemailer@~0.6.0" args=["nodemailer@~0.6.0",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: 'nodemailer@~0.6.0',
7 verbose parsed url   path: 'nodemailer@~0.6.0',
7 verbose parsed url   href: 'nodemailer@~0.6.0' }
8 verbose cache add name="nodemailer" spec="~0.6.0" args=["nodemailer","~0.6.0"]
9 verbose parsed url { protocol: null,
9 verbose parsed url   slashes: null,
9 verbose parsed url   auth: null,
9 verbose parsed url   host: null,
9 verbose parsed url   port: null,
9 verbose parsed url   hostname: null,
9 verbose parsed url   hash: null,
9 verbose parsed url   search: null,
9 verbose parsed url   query: null,
9 verbose parsed url   pathname: '~0.6.0',
9 verbose parsed url   path: '~0.6.0',
9 verbose parsed url   href: '~0.6.0' }
10 verbose addNamed [ 'nodemailer', '~0.6.0' ]
11 verbose addNamed [ null, '>=0.6.0-0 <0.7.0-0' ]
12 silly lockFile ad49fe85-nodemailer-0-6-0 nodemailer@~0.6.0
13 verbose lock nodemailer@~0.6.0 /home/vagrant/.npm/ad49fe85-nodemailer-0-6-0.lock
14 silly addNameRange { name: 'nodemailer',
14 silly addNameRange   range: '>=0.6.0-0 <0.7.0-0',
14 silly addNameRange   hasData: false }
15 verbose url raw nodemailer
16 verbose url resolving [ 'https://registry.npmjs.org/', './nodemailer' ]
17 verbose url resolved https://registry.npmjs.org/nodemailer
18 info trying registry request attempt 1 at 02:30:58
19 verbose etag "6KG0KAH40TOD3HSEFWPY7MKWW"
20 http GET https://registry.npmjs.org/nodemailer
21 http 304 https://registry.npmjs.org/nodemailer
22 silly registry.get cb [ 304,
22 silly registry.get   { date: 'Tue, 04 Mar 2014 02:31:04 GMT',
22 silly registry.get     server: 'Apache',
22 silly registry.get     connection: 'Keep-Alive',
22 silly registry.get     'keep-alive': 'timeout=10, max=50',
22 silly registry.get     etag: '"6KG0KAH40TOD3HSEFWPY7MKWW"',
22 silly registry.get     'cache-control': 'max-age=1',
22 silly registry.get     vary: 'Accept' } ]
23 verbose etag nodemailer from cache
24 silly addNameRange number 2 { name: 'nodemailer',
24 silly addNameRange   range: '>=0.6.0-0 <0.7.0-0',
24 silly addNameRange   hasData: true }
25 silly addNameRange versions [ 'nodemailer',
25 silly addNameRange   [ '0.1.1',
25 silly addNameRange     '0.1.2',
25 silly addNameRange     '0.1.3',
25 silly addNameRange     '0.1.4',
25 silly addNameRange     '0.1.5',
25 silly addNameRange     '0.1.6',
25 silly addNameRange     '0.1.7',
25 silly addNameRange     '0.1.8',
25 silly addNameRange     '0.1.9',
25 silly addNameRange     '0.1.10',
25 silly addNameRange     '0.1.11',
25 silly addNameRange     '0.1.12',
25 silly addNameRange     '0.1.13',
25 silly addNameRange     '0.1.14',
25 silly addNameRange     '0.1.15',
25 silly addNameRange     '0.1.16',
25 silly addNameRange     '0.1.17',
25 silly addNameRange     '0.1.18',
25 silly addNameRange     '0.1.19',
25 silly addNameRange     '0.1.20',
25 silly addNameRange     '0.1.21',
25 silly addNameRange     '0.1.22',
25 silly addNameRange     '0.1.23',
25 silly addNameRange     '0.1.24',
25 silly addNameRange     '0.2.0',
25 silly addNameRange     '0.2.1',
25 silly addNameRange     '0.2.2',
25 silly addNameRange     '0.2.3',
25 silly addNameRange     '0.2.4',
25 silly addNameRange     '0.3.0',
25 silly addNameRange     '0.3.1',
25 silly addNameRange     '0.3.2',
25 silly addNameRange     '0.3.3',
25 silly addNameRange     '0.3.4',
25 silly addNameRange     '0.3.5',
25 silly addNameRange     '0.3.6',
25 silly addNameRange     '0.3.7',
25 silly addNameRange     '0.3.8',
25 silly addNameRange     '0.3.9',
25 silly addNameRange     '0.3.10',
25 silly addNameRange     '0.3.11',
25 silly addNameRange     '0.3.12',
25 silly addNameRange     '0.3.13',
25 silly addNameRange     '0.3.14',
25 silly addNameRange     '0.3.15',
25 silly addNameRange     '0.3.16',
25 silly addNameRange     '0.3.17',
25 silly addNameRange     '0.3.18',
25 silly addNameRange     '0.3.19',
25 silly addNameRange     '0.3.20',
25 silly addNameRange     '0.3.21',
25 silly addNameRange     '0.3.22',
25 silly addNameRange     '0.3.23',
25 silly addNameRange     '0.3.24',
25 silly addNameRange     '0.3.25',
25 silly addNameRange     '0.3.26',
25 silly addNameRange     '0.3.27',
25 silly addNameRange     '0.3.28',
25 silly addNameRange     '0.3.29',
25 silly addNameRange     '0.3.30',
25 silly addNameRange     '0.3.31',
25 silly addNameRange     '0.3.32',
25 silly addNameRange     '0.3.33',
25 silly addNameRange     '0.3.34',
25 silly addNameRange     '0.3.35',
25 silly addNameRange     '0.3.37',
25 silly addNameRange     '0.3.38',
25 silly addNameRange     '0.3.39',
25 silly addNameRange     '0.3.40',
25 silly addNameRange     '0.3.41',
25 silly addNameRange     '0.3.42',
25 silly addNameRange     '0.3.43',
25 silly addNameRange     '0.3.44',
25 silly addNameRange     '0.4.0',
25 silly addNameRange     '0.4.1',
25 silly addNameRange     '0.4.2',
25 silly addNameRange     '0.4.3',
25 silly addNameRange     '0.4.4',
25 silly addNameRange     '0.5.0',
25 silly addNameRange     '0.5.1',
25 silly addNameRange     '0.5.2',
25 silly addNameRange     '0.5.3',
25 silly addNameRange     '0.5.4',
25 silly addNameRange     '0.5.5',
25 silly addNameRange     '0.5.6',
25 silly addNameRange     '0.5.7',
25 silly addNameRange     '0.5.8',
25 silly addNameRange     '0.5.9',
25 silly addNameRange     '0.5.10',
25 silly addNameRange     '0.5.11',
25 silly addNameRange     '0.5.12',
25 silly addNameRange     '0.5.13',
25 silly addNameRange     '0.5.14',
25 silly addNameRange     '0.5.15',
25 silly addNameRange     '0.6.0',
25 silly addNameRange     '0.6.1' ] ]
26 verbose addNamed [ 'nodemailer', '0.6.1' ]
27 verbose addNamed [ '0.6.1', '0.6.1' ]
28 silly lockFile ee2cdc69-nodemailer-0-6-1 nodemailer@0.6.1
29 verbose lock nodemailer@0.6.1 /home/vagrant/.npm/ee2cdc69-nodemailer-0-6-1.lock
30 silly lockFile ee2cdc69-nodemailer-0-6-1 nodemailer@0.6.1
31 silly lockFile ee2cdc69-nodemailer-0-6-1 nodemailer@0.6.1
32 silly lockFile ad49fe85-nodemailer-0-6-0 nodemailer@~0.6.0
33 silly lockFile ad49fe85-nodemailer-0-6-0 nodemailer@~0.6.0
34 silly resolved [ { name: 'nodemailer',
34 silly resolved     description: 'Easy to use module to send e-mails, supports unicode and SSL/TLS',
34 silly resolved     version: '0.6.1',
34 silly resolved     author: { name: 'Andris Reinman' },
34 silly resolved     maintainers: [ [Object] ],
34 silly resolved     homepage: 'http://github.com/andris9/nodemailer',
34 silly resolved     repository: { type: 'git', url: 'http://github.com/andris9/nodemailer.git' },
34 silly resolved     scripts: { test: 'nodeunit test/' },
34 silly resolved     main: './lib/nodemailer',
34 silly resolved     licenses: [ [Object] ],
34 silly resolved     dependencies:
34 silly resolved      { mailcomposer: '~0.2.7',
34 silly resolved        simplesmtp: '~0.2 || ~0.3',
34 silly resolved        directmail: '~0.1.6',
34 silly resolved        he: '~0.3.6',
34 silly resolved        'public-address': '~0.1.0',
34 silly resolved        'readable-stream': '~1.1.9' },
34 silly resolved     devDependencies: { nodeunit: '*' },
34 silly resolved     optionalDependencies: { 'readable-stream': '~1.1.9' },
34 silly resolved     engines: { node: '>=0.6.0' },
34 silly resolved     keywords: [ 'e-mail', 'mime', 'email', 'mail', 'sendmail', 'ses', 'smtp' ],
34 silly resolved     readme: '![Nodemailer](https://raw2.github.com/andris9/Nodemailer/master/assets/nm_logo_200x136.png)\n\n**Nodemailer** is an easy to use module to send e-mails with Node.JS (using\nSMTP or sendmail or Amazon SES) and is unicode friendly - You can use any characters you like ✔\n\nNodemailer is Windows friendly, you can install it with *npm* on Windows just like any other module, there are no compiled dependencies. Use it from Azure or from your Windows box hassle free.\n\n**[Read about using Nodemailer from the Node Knockout blog](http://blog.nodeknockout.com/post/34641712180/sending-email-from-node-js)**\n\n[![Build Status](https://secure.travis-ci.org/andris9/Nodemailer.png)](http://travis-ci.org/andris9/Nodemailer)\n[![NPM version](https://badge.fury.io/js/nodemailer.png)](http://badge.fury.io/js/nodemailer)\n\n## Notes and information\n\n### Nodemailer supports\n\n  * **Unicode** to use any characters\n  * **HTML content** as well as **plain text** alternative\n  * **Attachments** (including attachment **streaming** for sending larger files)\n  * **Embedded images** in HTML\n  * **SSL/STARTTLS** for secure e-mail delivery\n  * Different transport methods - **SMTP**, **sendmail**, **Amazon SES** or **directly** to recipients MX server or even a **custom** method\n  * SMTP **Connection pool** and connection reuse for rapid delivery\n  * **Preconfigured** services for using SMTP with Gmail, Hotmail etc.\n  * Use objects as header values for **SendGrid** SMTP API\n  * **XOAUTH2** authentication and token generation support - useful with Gmail\n  * **DKIM** signing\n\n### Support Nodemailer development\n\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\nIf you want to support with Bitcoins, then my wallet address is `15Z8ADxhssKUiwP3jbbqJwA21744KMCfTM`\n\n### Nodemailer PaaS support\n\nNodemailer has been tested successfully on the following PaaS platforms (using free/trial accounts):\n\n  * [heroku](http://www.heroku.com/)\n  * [AppFog](http://www.appfog.com/)\n  * [OpenShift](https://openshift.redhat.com/app/)\n  * [Nodejitsu](http://nodejitsu.com/)\n  * [Windows Azure](http://www.windowsazure.com/)\n  * [Modulus](https://modulus.io/)\n\n### Check out my other mail related modules\n\nIf you want to parse generated or received e-mail instead of sending it, check\nout [MailParser](https://github.com/andris9/mailparser).\n\nIf you only want to generate the raw e-mail stream, check out\n[MailComposer](https://github.com/andris9/mailcomposer).\n\nIf you only want to communicate with the SMTP (both as client and the server),\ncheck out [simplesmtp](https://github.com/andris9/simplesmtp).\n\n### Templates\n\nTo use Nodemailer with templates, please see documentation for these projects.\n\n * [swig-email-templates](https://github.com/superjoe30/swig-email-templates) - swig, template inheritance, dummy context\n * [node-email-templates](https://github.com/niftylettuce/node-email-templates) - ejs\n\n## TL;DR Usage Example\n\nThis is a complete example to send an e-mail with plaintext and HTML body\n\n```javascript\nvar nodemailer = require("nodemailer");\n\n// create reusable transport method (opens pool of SMTP connections)\nvar smtpTransport = nodemailer.createTransport("SMTP",{\n    service: "Gmail",\n    auth: {\n        user: "gmail.user@gmail.com",\n        pass: "userpass"\n    }\n});\n\n// setup e-mail data with unicode symbols\nvar mailOptions = {\n    from: "Fred Foo ✔ <foo@blurdybloop.com>", // sender address\n    to: "bar@blurdybloop.com, baz@blurdybloop.com", // list of receivers\n    subject: "Hello ✔", // Subject line\n    text: "Hello world ✔", // plaintext body\n    html: "<b>Hello world ✔</b>" // html body\n}\n\n// send mail with defined transport object\nsmtpTransport.sendMail(mailOptions, function(error, response){\n    if(error){\n        console.log(error);\n    }else{\n        console.log("Message sent: " + response.message);\n    }\n\n    // if you don\'t want to use this transport object anymore, uncomment following line\n    //smtpTransport.close(); // shut down the connection pool, no more messages\n});\n```\n\nOr if you want to go the really easy (but not the best) route, you can try to send e-mails directly to\nthe recipients MX server without a relaying service:\n\n```javascript\nvar mail = require("nodemailer").mail;\n\nmail({\n    from: "Fred Foo ✔ <foo@blurdybloop.com>", // sender address\n    to: "bar@blurdybloop.com, baz@blurdybloop.com", // list of receivers\n    subject: "Hello ✔", // Subject line\n    text: "Hello world ✔", // plaintext body\n    html: "<b>Hello world ✔</b>" // html body\n});\n```\n\nSee also the [examples folder](https://github.com/andris9/Nodemailer/tree/master/examples)\nfor full featured examples\n\n## Installation\n\nInstall through NPM\n\n```\nnpm install nodemailer\n```\n\n## Usage\n\nInclude the module\n\n```javascript\nvar nodemailer = require("nodemailer");\n```\n\nAn e-mail can be sent with `sendMail(mailOptions[, callback])` command\n\n```javascript\ntransport.sendMail(mailOptions, callback);\n```\n\nWhere\n\n  * `transport` is a transport object created from the `nodemailer.createTransport` method\n  * **mailOptions** defines the e-mail (set its subject, body text, receivers etc.), see [E-mail Message Fields](#e-mail-message-fields) for details\n  * **callback** is the callback function that will be run after the e-mail is sent or the sending failed (see [Return callback](#return-callback) for details)\n\n## Setting up a transport method\n\nBefore you can send any e-mails you need to set up a transport method. This can\nbe done with `nodemailer.createTransport(type, options)` where `type` indicates\nthe transport protocol and `options` defines how it is used.\n\n```javascript\nvar transport = nodemailer.createTransport("SMTP", {smtp_options});\n```\n\nThe same transport object can and should be reused several times.\n\nWhen the transport method is defined, it can be used to send e-mail with `sendMail`\n\n```javascript\nvar transport = nodemailer.createTransport("SMTP", {smtp_options});\n\ntransport.sendMail({\n    from: "sender@tr.ee",\n    to: "receiver@tr.ee"\n    ...\n});\n```\n\n### Possible transport methods\n\n`type` parameter can be one of the following:\n\n  * **SMTP** for using SMTP\n  * **SES** for using Amazon SES\n  * **Sendmail** for utilizing systems *sendmail* command\n  * **Pickup** for storing the e-mail in a directory on your machine\n  * **Direct** for sending e-mails directly to recipients MTA servers\n\nIf `type` is not set, "direct" will be used\n\nIf you want to use custom transport method, you need to provide the transport handler constructor as the `type` parameter. See [Custom Transport Methods](#custom-transport-methods) for details\n\n### Global transport options\n\nIn addition to any specific configuration for a selected transport type, a few global\nones exist.\n\n  * **resolveHostname** - if set to true, resolves the public hostname for the current machine (makes an external HTTP request to [remoteAddress.net](http://www.remoteaddress.net/) for resolving it). The value is used when generating `Message-ID` values (as the domain part) and when identifying itself to a SMTP server\n  * **xMailer** - if the value is a string it replaces the default `X-Mailer` header value. If the value is `false` then `X-Mailer` is stripped from the header\n\n### Setting up SMTP\n\nSMTP is different from the other transport mechanisms, as in its case a connection\npool is created. All the connections try to stay alive as long as possible and\nare reusable to minimize the protocol overhead delay - for example setting up\nTLS for authenticating is relatively lengthy process (in CPU terms, not by human\nterms), you do not want to do it several times.\n\nPossible SMTP options are the following:\n\n * **service** - an optional well known service identifier ("Gmail", "Hotmail" etc., see [Well known Services](#well-known-services-for-smtp) for a list of supported services) to auto-configure host, port and secure connection settings\n * **host** - hostname of the SMTP server (defaults to "localhost", not needed with `service`)\n * **port** - port of the SMTP server (defaults to 25, not needed with `service`)\n * **secureConnection** - use SSL (default is `false`, not needed with `service`). If you\'re using port 587 then keep `secureConnection` false, since the connection is started in insecure plain text mode and only later upgraded with STARTTLS\n * **name** - the name of the client server (defaults to machine name)\n * **auth** - authentication object as `{user:"...", pass:"..."}` or  `{XOAuth2: {xoauth2_options}}` or  `{XOAuthToken: "base64data"}`\n * **ignoreTLS** - ignore server support for STARTTLS (defaults to `false`)\n * **debug** - output client and server messages to console\n * **maxConnections** - how many connections to keep in the pool (defaults to 5)\n * **maxMessages** - limit the count of messages to send through a single connection (no limit by default)\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("SMTP", {\n    service: "Gmail",\n    auth: {\n        user: "gmail.user@gmail.com",\n        pass: "userpass"\n    }\n});\n```\n\nor the same without `service` parameter\n\n```javascript\nvar transport = nodemailer.createTransport("SMTP", {\n    host: "smtp.gmail.com", // hostname\n    secureConnection: true, // use SSL\n    port: 465, // port for secure SMTP\n    auth: {\n        user: "gmail.user@gmail.com",\n        pass: "userpass"\n    }\n});\n```\n\n**NB!** if you want to close the pool (cancel all open connections) you can use `transport.close()`\n\n```javascript\n\nvar transport = nodemailer.createTransport("SMTP",{});\n...\ntransport.close(); // close the pool\n```\n\n\n#### SMTP XOAUTH and token generation\n\n##### XOAUTH2\n\n**nodemailer** supports XOAUTH2 authentication protocol. To use this you need to obtain a Client ID and a Client Secret from [Google API Console](https://code.google.com/apis/console) (Open "API Access" and create "Client ID for web applications") and then request a refresh token for an user. See [Google OAuth 2.0 Offline Access](https://developers.google.com/accounts/docs/OAuth2WebServer#offline) for more information.\n\nOnce you have obtained the Client ID, Client Secret and a Refresh Token for an user, you can use these values to send mail on behalf of the user.\n\n```javascript\nvar transportOptions = {\n    ...,\n    auth: {\n        XOAuth2: {\n            user: "example.user@gmail.com",\n            clientId: "8819981768.apps.googleusercontent.com",\n            clientSecret: "{client_secret}",\n            refreshToken: "1/xEoDL4iW3cxlI7yDbSRFYNG01kVKM2C-259HOF2aQbI",\n            accessToken: "vF9dft4qmTc2Nvb3RlckBhdHRhdmlzdGEuY29tCg==",\n            timeout: 3600\n        }\n    }\n}\n```\n\n`accessToken` and `timeout` values are both optional. If XOAUTH2 login fails a new access token is generated automatically and the login is retried.\n\n##### XOAUTH\n\nOlder XOAUTH is also supported by **nodemailer** for SMTP. XOAUTH is based on OAuth protocol 1.0 and is considered deprecated.\n\nTo use this, include `XOAuthToken` option in `auth` instead of the regular `user` and `pass`.\n\n```javascript\nvar transportOptions = {\n    ...,\n    auth: {\n        XOAuthToken: "R0VUIGh0dHBzOi8vbWFpbC5nb29...."\n    }\n}\n```\n\n**nodemailer** includes also built in XOAUTH token generator which can be used\nwith `nodemailer.createXOAuthGenerator()`. The function is preconfigured for\nGmail, so in this case only mandatory options are `user`, `token` and `tokenSecret`.\n\n```javascript\nvar XOAuthTokenGenerator = nodemailer.createXOAuthGenerator({\n        user: "test.nodemailer@gmail.com",\n        // requestUrl: "https://oauth.access.point",\n        // consumerKey: "anonymous",\n        // consumerSecret: "anonymous",\n        token: "1/O_HgoO4h2uOUfpus0V--7mygICXrQQ0ZajB3ZH52KqM",\n        tokenSecret: "_mUBkIwNPnfQBUIWrJrpXJ0c"\n    });\n```\n\nOne of `user` or `requestUrl` is mandatory. `consumerKey` and `consumerSecret` both\ndefault to `"anonymous"`.\n\n```javascript\nvar transportOptions = {\n    service: "Gmail",\n    auth: {\n        XOAuthToken: nodemailer.createXOAuthGenerator({\n            user: "test.nodemailer@gmail.com",\n            token: "1/O_HgoO4h2uOUfpus0V--7mygICXrQQ0ZajB3ZH52KqM",\n            tokenSecret: "_mUBkIwNPnfQBUIWrJrpXJ0c"\n        })\n    }\n}\n```\n\n### Setting up SES\n\nSES is actually a HTTP based protocol, the compiled e-mail and related info\n(signatures and such) are sent as a HTTP request to SES servers.\n\nPossible SES options are the following:\n\n * **AWSAccessKeyID** - AWS access key (required)\n * **AWSSecretKey** - AWS secret (required)\n * **ServiceUrl** - *optional* API end point URL (defaults to *"https://email.us-east-1.amazonaws.com"*)\n * **AWSSecurityToken** - *optional* security token\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("SES", {\n    AWSAccessKeyID: "AWSACCESSKEY",\n    AWSSecretKey: "AWS/Secret/key"\n});\n```\n\n### Setting up Sendmail\n\nSendmail transport method streams the compiled message to the *stdin* of *sendmail*\ncommand.\n\nOptions object is optional, possible sendmail options are the following:\n\n  * **path** - path to the `sendmail` command (defaults to *"sendmail"*)\n  * **args** - an array of extra command line options to pass to the `sendmail` command (ie. `["-f", "foo@blurdybloop.com"]`).\n\nCurrently the command to be spawned is built up like this: the command is either using `sendmail -i -f from_addr to_addr[]` (by default) or `sendmail -i list_of_args[]` (if `args` property was given). `-i` is ensured to be present on either case.\n\nIn the default case (no `args` defined) From and To addresses are either taken from `From`,`To`, `Cc` and `Bcc` properties or from the `envelope` property if one is present.\n\nBe wary when using the `args` property - no recipients are defined by default, you need to ensure these by yourself, for example by using the `-t` flag.\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("sendmail");\n```\n\nor\n\n```javascript\nvar transport = nodemailer.createTransport("sendmail", {\n    path: "/usr/local/bin/sendmail",\n    args: ["-t", "-f", "foo@blurdybloop.com"]\n});\n```\n\nSendmail uses a Transform stream, which is available in NodeJS >= 0.10. For\nprevious versions you can include [`readable-stream`](https://github.com/isaacs/readable-stream)\nin your depencies, which provides a polyfill.\n\n### Setting up Pickup\n\nWhen choosing `Pickup` all e-mails will be stored in a directory so that they can be picked up by your SMTP server.\n\nPossible options are the following:\n\n * **directory** - The directory where applications save e-mail for later processing by the SMTP server (required)\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("PICKUP", {\n    directory: "C:\\\\inetpub\\\\mailroot\\\\Pickup"\n});\n```\n\nor the shorthand version:\n\n```javascript\nvar transport = nodemailer.createTransport("PICKUP", "C:\\\\inetpub\\\\mailroot\\\\Pickup");\n```\n\n### Setting up Direct transport\n\n*Direct* transport is useful when you can not or want not to use a relaying service or the sendmail command.\n\nTo set it up, you do not need to provide anything, just run the following to create a transport object:\n\n```\nvar transport = nodemailer.createTransport();\n```\n\nIf you want to use debug logging, use the following form:\n\n```\nvar transport = nodemailer.createTransport("direct", {debug: true});\n```\n\nThere is also a shorthand method `mail` if you do not like to set up a transport object (see [E-mail message fields](#e-mail-message-fields) for options for the `mailOptions` object).\n\n```javascript\nvar mail = require("nodemailer").mail;\nmail(mailOptions);\n```\n\n*Direct* can be quite inefficient as it queues all e-mails to be sent into memory. Additionally, if a message is not yet sent and the process is closed, all data about queued messages are lost. Thus *direct* is only suitable for low throughput systems, like password remainders and such, where the message can be processed immediatelly.\n\n*Direct* is able to handle sending errors, graylisting and such. If a message can not be sent, it is requeued and retried later.\n\nTo raise the odds of getting your emails into recipients inboxes, you should setup [SPF records](http://en.wikipedia.org/wiki/Sender_Policy_Framework) for your domain. Using [DKIM](#dkim-signing) wouldn\'t hurt either. Dynamic IP addresses are frequently treated as spam sources, so using static IPs is advised.\n\n#### Handling responses\n\n*Direct* exposes an event emitter for receiving status updates. If the message includes several recipients, the message\nis not sent to everyone at once but is sharded in chunks based on the domain name of the addresses. For example\nif your message includes the following recipients: *user1@example.com*, *user2@example.com* and *user3@blurdybloop.com*, then 2 separate messages are sent out - one for *user1@example.com* and *user2@example.com* and one for *user3@blurdybloop.com*. This means that sending to different recipients may succeed or fail independently. All information about messages being delivered, failed or requeued is emitted by the status emitter `statusHandler`.\n\n*Direct* exposes the following events:\n\n  * **\'sent\'** - message was sent successfully\n  * **\'failed\'** - message was failed permanently\n  * **\'requeue\'** - message failed but the error might not be permanent, so the message is requeued for later (once the message is retried an event is fired again).\n\nAll events get the same argument which is an object with the following properties:\n\n  * **domain** - is the domain part of the e-mail addresses\n  * **response** - is the last line form the SMTP transmission\n\n**Usage example**\n\n```javascript\ntransport.sendMail(messageOptions, function(error, response){\n    if(error){\n        console.log(error);\n        return;\n    }\n\n    // response.statusHandler only applies to \'direct\' transport\n    response.statusHandler.once("failed", function(data){\n        console.log(\n          "Permanently failed delivering message to %s with the following response: %s",\n          data.domain, data.response);\n    });\n\n    response.statusHandler.once("requeue", function(data){\n        console.log("Temporarily failed delivering message to %s", data.domain);\n    });\n\n    response.statusHandler.once("sent", function(data){\n        console.log("Message was accepted by %s", data.domain);\n    });\n});\n```\n\n**NB!** If you want to provide instant feedback to the user, listen for the first `\'sent\'`, `\'failed\'`, or `\'requeued\'` event only. The first event should arrive quickly but once the message gets requeued, the delay until the next event for this particular domain is fired is at least 15 minutes.\n\n> This example uses `.once` for listening to the events which is ok if you have just one recipient. For several recipients with different domains, the events get called several times and thus would need a more complex handling.\n\n#### When would you use Direct transport?\n\n  * When prototyping your application\n  * If you do not have or do not want to use a relaying service account\n  * When running under Windows as a Sendmail replacement (by default Sendmail is not available in Windows)\n\n### DKIM Signing\n\n**Nodemailer** supports DKIM signing with very simple setup. Use this with caution\nthough since the generated message needs to be buffered entirely before it can be\nsigned. Not a big deal with small messages but might consume a lot of RAM when\nusing larger attachments.\n\nSet up the DKIM signing with `useDKIM` method for a transport object:\n\n```javascript\ntransport.useDKIM(dkimOptions)\n```\n\nWhere `dkimOptions` includes necessary options for signing\n\n  * **domainName** - the domainname that is being used for signing\n  * **keySelector** - key selector. If you have set up a TXT record with DKIM public key at *zzz._domainkey.blurdybloop.com* then `zzz` is the selector\n  * **privateKey** - DKIM private key that is used for signing as a string\n  * **headerFieldNames** - optional colon separated list of header fields to sign, by default all fields suggested by RFC4871 #5.5 are used\n\nAll messages transmitted through this transport objects are from now on DKIM signed.\n\nCurrently if several header fields with the same name exists, only the last one (the one in the bottom) is signed.\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("Sendmail");\n\ntransport.useDKIM({\n    domainName: "kreata.ee",\n    keySelector: "dkim",\n    privateKey: fs.readFileSync("private_key.pem")\n});\n\ntransport.sendMail(mailOptions);\n```\n\nSee [examples/example_dkim.js](https://github.com/andris9/Nodemailer/blob/master/examples/example_dkim.js) for a complete example.\n\n### Well known services for SMTP\n\nIf you want to use a well known service as the SMTP host, you do not need\nto enter the hostname or port number, just use the `service` parameter\n\nCurrently supported services are:\n\n  * **DynectEmail**\n  * **Gmail**\n  * **hot.ee**\n  * **Hotmail**\n  * **iCloud**\n  * **mail.ee**\n  * **Mail.Ru**\n  * **Mailgun**\n  * **Mailjet**\n  * **Mandrill**\n  * **Postmark**\n  * **QQ**\n  * **QQex** (Tencent Business Email)\n  * **SendGrid**\n  * **SES**\n  * **Yahoo**\n  * **yandex**\n  * **Zoho**\n\nPredefined service data covers `host`, `port` and secure connection settings,\nany other parameters (ie. `auth`) need to be set separately. Service names are\ncase insensitive, so using "gmail" instead of "Gmail" is totally fine.\n\nExample:\n\n```javascript\nvar smtpTransport = nodemailer.createTransport("Gmail",{\n    auth: {\n        user: "gmail.user@gmail.com",\n        pass: "userpass"\n    }\n});\n```\n\nor alternatively\n\n```javascript\nvar smtpTransport = nodemailer.createTransport("SMTP",{\n    service: "Gmail", // sets automatically host, port and connection security settings\n    auth: {\n        user: "gmail.user@gmail.com",\n        pass: "userpass"\n    }\n});\n```\n\nActually, if you are authenticating with an e-mail address that has a domain name\nlike @gmail.com or @yahoo.com etc., then you don\'t even need to provide the service name,\nit is detected automatically.\n\n```javascript\nvar smtpTransport = nodemailer.createTransport("SMTP",{\n    auth: {\n        user: "gmail.user@gmail.com", // service is detected from the username\n        pass: "userpass"\n    }\n});\n```\n\n## E-mail message fields\n\nThe following are the possible fields of an e-mail message:\n\n  - **from** - The e-mail address of the sender. All e-mail addresses can be plain `sender@server.com` or formatted `Sender Name <sender@server.com>`\n  - **to** - Comma separated list or an array of recipients e-mail addresses that will appear on the `To:` field\n  - **cc** - Comma separated list or an array of recipients e-mail addresses that will appear on the `Cc:` field\n  - **bcc** - Comma separated list or an array of recipients e-mail addresses that will appear on the `Bcc:` field\n  - **replyTo** - An e-mail address that will appear on the `Reply-To:` field\n  - **inReplyTo** - The message-id this message is replying\n  - **references** - Message-id list\n  - **subject** - The subject of the e-mail\n  - **text** - The plaintext version of the message\n  - **html** - The HTML version of the message\n  - **generateTextFromHTML** - if set to true uses HTML to generate plain text body part from the HTML if the text is not defined\n  - **headers** - An object of additional header fields `{"X-Key-Name": "key value"}` (NB! values are passed as is, you should do your own encoding to 7bit and folding if needed)\n  - **attachments** - An array of attachment objects.\n  - **alternatives** - An array of alternative text contents (in addition to text and html parts)\n  - **envelope** - optional SMTP envelope, if auto generated envelope is not suitable\n  - **messageId** - optional Message-Id value, random value will be generated if not set. Set to false to omit the Message-Id header\n  - **date** - optional Date value, current UTC string will be used if not set\n  - **encoding** - optional transfer encoding for the textual parts (defaults to "quoted-printable")\n  - **charset** - optional output character set for the textual parts (defaults to "utf-8")\n  - **dsn** - An object with methods `success`, `failure` and `delay`. If any of these are set to true, DSN will be used\n\nAll text fields (e-mail addresses, plaintext body, html body) use UTF-8 as the encoding.\nAttachments are streamed as binary.\n\nExample:\n\n```javascript\nvar transport = nodemailer.createTransport("Sendmail");\n\nvar mailOptions = {\n    from: "me@tr.ee",\n    to: "me@tr.ee",\n    subject: "Hello world!",\n    text: "Plaintext body"\n}\n\ntransport.sendMail(mailOptions);\n```\n\n### SendGrid support\n\nNodemailer supports SendGrid [SMTP API](http://docs.sendgrid.com/documentation/api/smtp-api/) out of the box - you can\nuse objects as header values and these are automatically JSONized (and mime encoded if needed).\n\n```javascript\nvar mailOptions = {\n    ...,\n    headers: {\n        \'X-SMTPAPI\': {\n            category : "newuser",\n            sub:{\n                "%name%": ["Žiguli Õllepruul"]\n            }\n        }\n    },\n    subject: "Hello, %name%"\n}\n```\n\nThis also applies to any other service that expects a JSON string as a header value for specified key.\n\n### Generate Text from HTML\n\nIf `generateTextFromHTML` option is set to true, then HTML contents of the mail is automatically converted\nto plaintext format when plaintext content is empty or missing.\n\nFor example\n\n```javascript\nmailOptions = {\n    ...,\n    generateTextFromHTML: true,\n    html: \'<h1>Hello world</h1><p><b>How</b> are you?\',\n    // text: \'\' // no text part\n}\n```\n\nis automatically converted in the backround by Nodemailer to:\n\n```javascript\nmailOptions = {\n    ...,\n    // source html:\n    html: \'<h1>Hello world</h1><p><b>How</b> are you?\',\n    // automatically generated plaintext message:\n    text: "Hello world\\n"+\n          "===========\\n"+\n          "\\n"+\n          "**How** are you?"\n}\n```\n\nAs you can see the output syntax for `generateTextFromHTML` looks similar to markdown, and that\nis exactly the case here - Nodemailer includes a simple HTML to markdown converter. But don\'t\nexpect too much from it, it\'s not full featured or perfect, just some regexes here and there.\n\n### Attachment fields\n\nAttachment object consists of the following properties:\n\n  * **fileName** - filename to be reported as the name of the attached file, use of unicode is allowed (except when using Amazon SES which doesn\'t like it)\n  * **cid** - optional content id for using inline images in HTML message source\n  * **contents** - String or a Buffer contents for the attachment\n  * **filePath** - path to a file or an URL if you want to stream the file instead of including it (better for larger attachments)\n  * **streamSource** - Stream object for arbitrary binary streams if you want to stream the contents (needs to support *pause*/*resume*)\n  * **contentType** - optional content type for the attachment, if not set will be derived from the `fileName` property\n  * **contentDisposition** - optional content disposition type for the attachment, defaults to "attachment"\n\nOne of `contents`, `filePath` or `streamSource` must be specified, if none is\npresent, the attachment will be discarded. Other fields are optional.\n\nAttachments can be added as many as you want.\n\n```javascript\nvar mailOptions = {\n    ...\n    attachments: [\n        {   // utf-8 string as an attachment\n            fileName: "text1.txt",\n            contents: "hello world!"\n        },\n        {   // binary buffer as an attachment\n            fileName: "text2.txt",\n            contents: new Buffer("hello world!","utf-8")\n        },\n        {   // file on disk as an attachment\n            fileName: "text3.txt",\n            filePath: "/path/to/file.txt" // stream this file\n        },\n        {   // fileName and content type is derived from filePath\n            filePath: "/path/to/file.txt"\n        },\n        {   // stream as an attachment\n            fileName: "text4.txt",\n            streamSource: fs.createReadStream("file.txt")\n        },\n        {   // define custom content type for the attachment\n            fileName: "text.bin",\n            contents: "hello world!",\n            contentType: "text/plain"\n        },\n        {   // use URL as an attachment\n            fileName: "license.txt",\n            filePath: "https://raw.github.com/andris9/Nodemailer/master/LICENSE"\n        }\n    ]\n}\n```\n\n### Alternative fields\n\nIn addition to text and HTML, any kind of data can be inserted as an alternative content of the main body - for example a word processing document with the same text as in the HTML field. It is the job of the e-mail client to select and show the best fitting alternative to the reader.\n\nAttahcment object consists of the following properties:\n\n  * **contents** - String or a Buffer contents for the attachment\n  * **contentType** - optional content type for the attachment, if not set will be set to "application/octet-stream"\n  * **contentEncoding** - optional value of how the data is encoded, defaults to "base64"\n\nIf `contents` is empty, the alternative will be discarded. Other fields are optional.\n\n**Usage example:**\n\n```javascript\nvar mailOptions = {\n    ...\n    html: "<b>Hello world!</b>",\n    alternatives: [\n        {\n            contentType: "text/x-web-markdown",\n            contents: "**Hello world!**"\n        }\n    ]\n}\n```\nIf the receiving e-mail client can render messages in Markdown syntax as well, it could prefer\nto display this alternative as the main content of the message instead of the html part.\n\nAlternatives can be added as many as you want.\n\n### Address Formatting\n\nAll the e-mail addresses can be plain e-mail address\n\n```\nfoobar@blurdybloop.com\n```\n\nor with formatted name (includes unicode support)\n\n```\n"Ноде Майлер" <foobar@blurdybloop.com>\n```\n\nTo, Cc and Bcc fields accept comma separated list of e-mails or an array of\nemails or an array of comma separated list of e-mails - use it as you like.\nFormatting can be mixed.\n\n```\n...,\nto: \'foobar@blurdybloop.com, "Ноде Майлер" <bar@blurdybloop.com>, "Name, User" <baz@blurdybloop.com>\',\ncc: [\'foobar@blurdybloop.com\', \'"Ноде Майлер" <bar@blurdybloop.com>, "Name, User" <baz@blurdybloop.com>\']\n...\n```\n\nYou can even use unicode domain and user names, these are automatically converted\nto the supported form\n\n```\n"Unicode Domain" <info@müriaad-polüteism.info>\n```\n\n### SMTP envelope\n\nSMTP envelope is usually auto generated from `from`, `to`, `cc` and `bcc` fields but\nif for some reason you want to specify it yourself, you can do it with `envelope` property.\n\n`envelope` is an object with the following params: `from`, `to`, `cc` and `bcc` just like\nwith regular mail options. You can also use the regular address format, unicode domains etc.\n\n```javascript\nmailOptions = {\n    ...,\n    from: "mailer@kreata.ee",\n    to: "daemon@kreata.ee",\n    envelope: {\n        from: "Daemon <deamon@kreata.ee>",\n        to: "mailer@kreata.ee, Mailer <mailer2@kreata.ee>"\n    }\n}\n```\n\nThe envelope only applies when using SMTP or sendmail, setting envelope has no effect with SES.\n\n### Using Embedded Images\n\nAttachments can be used as embedded images in the HTML body. To use this\nfeature, you need to set additional property of the attachment - `cid` (unique\nidentifier of the file) which is a reference to the attachment file. The same\n`cid` value must be used as the image URL in HTML (using `cid:` as the URL\nprotocol, see example below).\n\n**NB!** the cid value should be as unique as possible!\n\n```javascript\nvar mailOptions = {\n    ...\n    html: "Embedded image: <img src=\'cid:unique@kreata.ee\' />",\n    attachments: [{\n        filename: "image.png",\n        filePath: "/path/to/file",\n        cid: "unique@kreata.ee" //same cid value as in the html img src\n    }]\n}\n```\n\n**Automatic embedding images**\n\nIf you want to convert images in the HTML to embedded images automatically, you can\nset mail option `forceEmbeddedImages` to true. In this case all images in\nthe HTML that are either using an absolute URL (http://...) or absolute file path\n(/path/to/file) are replaced with embedded attachments.\n\nFor example when using this code\n\n```javascript\nvar mailOptions = {\n    forceEmbeddedImages: true\n    html: \'Embedded image: <img src="http://example.com/image.png">\'\n};\n```\n\nThe image linked is fetched and added automatically as an attachment and the url\nin the HTML is replaced automatically with a proper `cid:` string.\n\n## Return callback\n\nReturn callback gets two parameters\n\n  * **error** - an error object if the message failed\n  * **responseStatus** - an object with some information about the status on success\n    * **responseStatus.messageId** - message ID used with the message\n\n> Different transport methods may expose additional properties to the `responseStatus` object, eg. *direct* transport exposes `statusHandler`, see the docs for the particular transport type for more info.\n\nExample:\n\n```javascript\nnodemailer.sendMail(mailOptions, function(error, responseStatus){\n    if(!error){\n        console.log(responseStatus.message); // response from the server\n        console.log(responseStatus.messageId); // Message-ID value used\n    }\n});\n```\n\n**NB!** Message-ID used might not be the same that reaches recipients inbox since some providers (like **SES**) may change the value.\n\n\n## Custom Transport Methods\n\nIf you want to use a custom transport method you need to define a constructor function with the following API\n\n```javascript\nfunction MyCustomHandler(options){}\nMyCustomHandler.prototype.sendMail = function(emailMessage, callback){};\nMyCustomHandler.prototype.close = function(closeCallback){};\n```\n\nWhere\n\n  * `options` is the optional options object passed to `createTransport`\n  * `sendMail()` is the function that is going to deliver the message\n  * `emailMessage` is a paused [MailComposer](https://github.com/andris9/mailcomposer#create-a-new-mailcomposer-instance) object. You should call `emailMessage.streamMessage()` once you have everything set up for streaming the message\n  * `callback` is the function to run once the message has been sent or an error occurred. The response object *should* include `messageId` property (you can get the value from `emailMessage._messageId`)\n  * `close()` is an optional method (no need to define it) to close the transport method\n  * `closeCallback` is the function to run once the transport method is closed\n\n### Example usage\n\n```javascript\nvar nodemailer = require("nodemailer");\n// Pipes all messages to stdout\nfunction MyTransport(options){\n    this.options = options;\n}\nMyTransport.prototype.sendMail = function(emailMessage, callback) {\n    console.log("Envelope: ", emailMessage.getEnvelope());\n    emailMessage.pipe(process.stdout);\n    emailMessage.on("error", function(err){\n        callback(err);\n    });\n    emailMessage.on("end", function(){\n        callback(null, {\n            messageId: emailMessage._messageId\n        });\n    });\n    // everything set up, start streaming\n    emailMessage.streamMessage();\n};\n// Use MyTransport as the transport method\nvar transport = nodemailer.createTransport(MyTransport, {\n    name: "my.host" // hostname for generating Message-ID values\n});\ntransport.sendMail({\n    from: "sender@example.com",\n    to: "receiver@example.com",\n    subject: "hello",\n    text: "world"\n}, function(err, response){\n    console.log(err || response);\n});\n```\n\n## Command line usage\n\n**NB!** Command line usage was removed from v0.4\n\n## Tests\n\nRun the tests with npm in Nodemailer\'s directory\n\n```\nnpm test\n```\n\nThere aren\'t currently many tests for Nodemailer but there are a lot of tests\nin the modules that are used to generate the raw e-mail body and to use the\nSMTP client connection.\n\n## Tweaking\n\nNodemailer in itself is actually more like a wrapper for my other modules\n[mailcomposer](https://github.com/andris9/mailcomposer) for composing the raw message stream\nand [simplesmtp](https://github.com/andris9/simplesmtp) for delivering it, by providing an\nunified API. If there\'s some problems with particular parts of the\nmessage composing/sending process you should look at the  appropriate module.\n\n## License\n\n**Nodemailer** is licensed under [MIT license](https://github.com/andris9/Nodemailer/blob/master/LICENSE). Basically you can do whatever you want to with it.\n\n----\n\nThe Nodemailer logo was designed by [Sven Kristjansen](https://www.behance.net/kristjansen).\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/andris9/nodemailer/trend.png)](https://bitdeli.com/free "Bitdeli Badge")\n',
34 silly resolved     readmeFilename: 'README.md',
34 silly resolved     bugs: { url: 'https://github.com/andris9/nodemailer/issues' },
34 silly resolved     _id: 'nodemailer@0.6.1',
34 silly resolved     _from: 'nodemailer@~0.6.0' } ]
35 info install nodemailer@0.6.1 into /home/vagrant/taskitafinal
36 info installOne nodemailer@0.6.1
37 info /home/vagrant/taskitafinal/node_modules/nodemailer unbuild
38 verbose tar unpack /home/vagrant/.npm/nodemailer/0.6.1/package.tgz
39 silly lockFile 0648ae72-itafinal-node-modules-nodemailer tar:///home/vagrant/taskitafinal/node_modules/nodemailer
40 verbose lock tar:///home/vagrant/taskitafinal/node_modules/nodemailer /home/vagrant/.npm/0648ae72-itafinal-node-modules-nodemailer.lock
41 silly lockFile 4ea124d3-npm-nodemailer-0-6-1-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.1/package.tgz
42 verbose lock tar:///home/vagrant/.npm/nodemailer/0.6.1/package.tgz /home/vagrant/.npm/4ea124d3-npm-nodemailer-0-6-1-package-tgz.lock
43 silly gunzTarPerm modes [ '755', '644' ]
44 silly gunzTarPerm extractEntry package.json
45 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
46 silly gunzTarPerm extractEntry .npmignore
47 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
48 silly gunzTarPerm extractEntry README.md
49 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
50 silly gunzTarPerm extractEntry LICENSE
51 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
52 silly gunzTarPerm extractEntry CONTRIBUTING.md
53 silly gunzTarPerm modified mode [ 'CONTRIBUTING.md', 384, 420 ]
54 silly gunzTarPerm extractEntry .travis.yml
55 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
56 silly gunzTarPerm extractEntry assets/nm_logo_1000x680.png
57 silly gunzTarPerm modified mode [ 'assets/nm_logo_1000x680.png', 384, 420 ]
58 silly gunzTarPerm extractEntry assets/nm_logo_100x68.png
59 silly gunzTarPerm modified mode [ 'assets/nm_logo_100x68.png', 384, 420 ]
60 silly gunzTarPerm extractEntry assets/nm_logo_200x136.png
61 silly gunzTarPerm modified mode [ 'assets/nm_logo_200x136.png', 384, 420 ]
62 silly gunzTarPerm extractEntry assets/nm_logo_400x272.png
63 silly gunzTarPerm modified mode [ 'assets/nm_logo_400x272.png', 384, 420 ]
64 silly gunzTarPerm extractEntry assets/nm_logo_50x34.png
65 silly gunzTarPerm modified mode [ 'assets/nm_logo_50x34.png', 384, 420 ]
66 silly gunzTarPerm extractEntry assets/nm_logo_curves.pdf
67 silly gunzTarPerm modified mode [ 'assets/nm_logo_curves.pdf', 384, 420 ]
68 silly gunzTarPerm extractEntry examples/example_alternative.js
69 silly gunzTarPerm modified mode [ 'examples/example_alternative.js', 384, 420 ]
70 silly gunzTarPerm extractEntry examples/example_direct.js
71 silly gunzTarPerm modified mode [ 'examples/example_direct.js', 384, 420 ]
72 silly gunzTarPerm extractEntry examples/example_dkim.js
73 silly gunzTarPerm modified mode [ 'examples/example_dkim.js', 384, 420 ]
74 silly gunzTarPerm extractEntry examples/example_sendmail.js
75 silly gunzTarPerm modified mode [ 'examples/example_sendmail.js', 384, 420 ]
76 silly gunzTarPerm extractEntry examples/example_ses.js
77 silly gunzTarPerm modified mode [ 'examples/example_ses.js', 384, 420 ]
78 silly gunzTarPerm extractEntry examples/example_autoembedding.js
79 silly gunzTarPerm modified mode [ 'examples/example_autoembedding.js', 384, 420 ]
80 silly gunzTarPerm extractEntry examples/example_smtp.js
81 silly gunzTarPerm modified mode [ 'examples/example_smtp.js', 384, 420 ]
82 silly gunzTarPerm extractEntry examples/example_xoauth.js
83 silly gunzTarPerm modified mode [ 'examples/example_xoauth.js', 384, 420 ]
84 silly gunzTarPerm extractEntry examples/example_xoauth2.js
85 silly gunzTarPerm modified mode [ 'examples/example_xoauth2.js', 384, 420 ]
86 silly gunzTarPerm extractEntry examples/example_short.js
87 silly gunzTarPerm modified mode [ 'examples/example_short.js', 384, 420 ]
88 silly gunzTarPerm extractEntry examples/nyan.gif
89 silly gunzTarPerm modified mode [ 'examples/nyan.gif', 384, 420 ]
90 silly gunzTarPerm extractEntry examples/test_private.pem
91 silly gunzTarPerm modified mode [ 'examples/test_private.pem', 384, 420 ]
92 silly gunzTarPerm extractEntry lib/helpers.js
93 silly gunzTarPerm modified mode [ 'lib/helpers.js', 384, 420 ]
94 silly gunzTarPerm extractEntry lib/nodemailer.js
95 silly gunzTarPerm modified mode [ 'lib/nodemailer.js', 384, 420 ]
96 silly gunzTarPerm extractEntry lib/transport.js
97 silly gunzTarPerm modified mode [ 'lib/transport.js', 384, 420 ]
98 silly gunzTarPerm extractEntry lib/wellknown.js
99 silly gunzTarPerm modified mode [ 'lib/wellknown.js', 384, 420 ]
100 silly gunzTarPerm extractEntry lib/xoauth.js
101 silly gunzTarPerm modified mode [ 'lib/xoauth.js', 384, 420 ]
102 silly gunzTarPerm extractEntry lib/engines/direct.js
103 silly gunzTarPerm modified mode [ 'lib/engines/direct.js', 384, 420 ]
104 silly gunzTarPerm extractEntry lib/engines/pickup.js
105 silly gunzTarPerm modified mode [ 'lib/engines/pickup.js', 384, 420 ]
106 silly gunzTarPerm extractEntry lib/engines/sendmail.js
107 silly gunzTarPerm modified mode [ 'lib/engines/sendmail.js', 384, 420 ]
108 silly gunzTarPerm extractEntry lib/engines/ses.js
109 silly gunzTarPerm modified mode [ 'lib/engines/ses.js', 384, 420 ]
110 silly gunzTarPerm extractEntry lib/engines/smtp.js
111 silly gunzTarPerm modified mode [ 'lib/engines/smtp.js', 384, 420 ]
112 silly gunzTarPerm extractEntry lib/engines/stub.js
113 silly gunzTarPerm modified mode [ 'lib/engines/stub.js', 384, 420 ]
114 silly gunzTarPerm extractEntry CHANGELOG.md
115 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 384, 420 ]
116 silly gunzTarPerm extractEntry test/nodemailer.js
117 silly gunzTarPerm modified mode [ 'test/nodemailer.js', 384, 420 ]
118 silly gunzTarPerm extractEntry test/mock/sendmail
119 silly gunzTarPerm modified mode [ 'test/mock/sendmail', 384, 420 ]
120 silly lockFile 0648ae72-itafinal-node-modules-nodemailer tar:///home/vagrant/taskitafinal/node_modules/nodemailer
121 silly lockFile 0648ae72-itafinal-node-modules-nodemailer tar:///home/vagrant/taskitafinal/node_modules/nodemailer
122 silly lockFile 4ea124d3-npm-nodemailer-0-6-1-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.1/package.tgz
123 silly lockFile 4ea124d3-npm-nodemailer-0-6-1-package-tgz tar:///home/vagrant/.npm/nodemailer/0.6.1/package.tgz
124 info preinstall nodemailer@0.6.1
125 verbose readDependencies using package.json deps
126 verbose readDependencies using package.json deps
127 verbose cache add [ 'directmail@~0.1.6', null ]
128 verbose cache add name=undefined spec="directmail@~0.1.6" args=["directmail@~0.1.6",null]
129 verbose parsed url { protocol: null,
129 verbose parsed url   slashes: null,
129 verbose parsed url   auth: null,
129 verbose parsed url   host: null,
129 verbose parsed url   port: null,
129 verbose parsed url   hostname: null,
129 verbose parsed url   hash: null,
129 verbose parsed url   search: null,
129 verbose parsed url   query: null,
129 verbose parsed url   pathname: 'directmail@~0.1.6',
129 verbose parsed url   path: 'directmail@~0.1.6',
129 verbose parsed url   href: 'directmail@~0.1.6' }
130 verbose cache add name="directmail" spec="~0.1.6" args=["directmail","~0.1.6"]
131 verbose parsed url { protocol: null,
131 verbose parsed url   slashes: null,
131 verbose parsed url   auth: null,
131 verbose parsed url   host: null,
131 verbose parsed url   port: null,
131 verbose parsed url   hostname: null,
131 verbose parsed url   hash: null,
131 verbose parsed url   search: null,
131 verbose parsed url   query: null,
131 verbose parsed url   pathname: '~0.1.6',
131 verbose parsed url   path: '~0.1.6',
131 verbose parsed url   href: '~0.1.6' }
132 verbose addNamed [ 'directmail', '~0.1.6' ]
133 verbose addNamed [ null, '>=0.1.6-0 <0.2.0-0' ]
134 silly lockFile a048f12c-directmail-0-1-6 directmail@~0.1.6
135 verbose lock directmail@~0.1.6 /home/vagrant/.npm/a048f12c-directmail-0-1-6.lock
136 verbose cache add [ 'he@~0.3.6', null ]
137 verbose cache add name=undefined spec="he@~0.3.6" args=["he@~0.3.6",null]
138 verbose parsed url { protocol: null,
138 verbose parsed url   slashes: null,
138 verbose parsed url   auth: null,
138 verbose parsed url   host: null,
138 verbose parsed url   port: null,
138 verbose parsed url   hostname: null,
138 verbose parsed url   hash: null,
138 verbose parsed url   search: null,
138 verbose parsed url   query: null,
138 verbose parsed url   pathname: 'he@~0.3.6',
138 verbose parsed url   path: 'he@~0.3.6',
138 verbose parsed url   href: 'he@~0.3.6' }
139 verbose cache add name="he" spec="~0.3.6" args=["he","~0.3.6"]
140 verbose parsed url { protocol: null,
140 verbose parsed url   slashes: null,
140 verbose parsed url   auth: null,
140 verbose parsed url   host: null,
140 verbose parsed url   port: null,
140 verbose parsed url   hostname: null,
140 verbose parsed url   hash: null,
140 verbose parsed url   search: null,
140 verbose parsed url   query: null,
140 verbose parsed url   pathname: '~0.3.6',
140 verbose parsed url   path: '~0.3.6',
140 verbose parsed url   href: '~0.3.6' }
141 verbose addNamed [ 'he', '~0.3.6' ]
142 verbose addNamed [ null, '>=0.3.6-0 <0.4.0-0' ]
143 silly lockFile 92ca361f-he-0-3-6 he@~0.3.6
144 verbose lock he@~0.3.6 /home/vagrant/.npm/92ca361f-he-0-3-6.lock
145 verbose cache add [ 'public-address@~0.1.0', null ]
146 verbose cache add name=undefined spec="public-address@~0.1.0" args=["public-address@~0.1.0",null]
147 verbose parsed url { protocol: null,
147 verbose parsed url   slashes: null,
147 verbose parsed url   auth: null,
147 verbose parsed url   host: null,
147 verbose parsed url   port: null,
147 verbose parsed url   hostname: null,
147 verbose parsed url   hash: null,
147 verbose parsed url   search: null,
147 verbose parsed url   query: null,
147 verbose parsed url   pathname: 'public-address@~0.1.0',
147 verbose parsed url   path: 'public-address@~0.1.0',
147 verbose parsed url   href: 'public-address@~0.1.0' }
148 verbose cache add name="public-address" spec="~0.1.0" args=["public-address","~0.1.0"]
149 verbose parsed url { protocol: null,
149 verbose parsed url   slashes: null,
149 verbose parsed url   auth: null,
149 verbose parsed url   host: null,
149 verbose parsed url   port: null,
149 verbose parsed url   hostname: null,
149 verbose parsed url   hash: null,
149 verbose parsed url   search: null,
149 verbose parsed url   query: null,
149 verbose parsed url   pathname: '~0.1.0',
149 verbose parsed url   path: '~0.1.0',
149 verbose parsed url   href: '~0.1.0' }
150 verbose addNamed [ 'public-address', '~0.1.0' ]
151 verbose addNamed [ null, '>=0.1.0-0 <0.2.0-0' ]
152 silly lockFile 0d2be6b6-public-address-0-1-0 public-address@~0.1.0
153 verbose lock public-address@~0.1.0 /home/vagrant/.npm/0d2be6b6-public-address-0-1-0.lock
154 verbose cache add [ 'readable-stream@~1.1.9', null ]
155 verbose cache add name=undefined spec="readable-stream@~1.1.9" args=["readable-stream@~1.1.9",null]
156 verbose parsed url { protocol: null,
156 verbose parsed url   slashes: null,
156 verbose parsed url   auth: null,
156 verbose parsed url   host: null,
156 verbose parsed url   port: null,
156 verbose parsed url   hostname: null,
156 verbose parsed url   hash: null,
156 verbose parsed url   search: null,
156 verbose parsed url   query: null,
156 verbose parsed url   pathname: 'readable-stream@~1.1.9',
156 verbose parsed url   path: 'readable-stream@~1.1.9',
156 verbose parsed url   href: 'readable-stream@~1.1.9' }
157 verbose cache add name="readable-stream" spec="~1.1.9" args=["readable-stream","~1.1.9"]
158 verbose parsed url { protocol: null,
158 verbose parsed url   slashes: null,
158 verbose parsed url   auth: null,
158 verbose parsed url   host: null,
158 verbose parsed url   port: null,
158 verbose parsed url   hostname: null,
158 verbose parsed url   hash: null,
158 verbose parsed url   search: null,
158 verbose parsed url   query: null,
158 verbose parsed url   pathname: '~1.1.9',
158 verbose parsed url   path: '~1.1.9',
158 verbose parsed url   href: '~1.1.9' }
159 verbose addNamed [ 'readable-stream', '~1.1.9' ]
160 verbose addNamed [ null, '>=1.1.9-0 <1.2.0-0' ]
161 silly lockFile f517707b-readable-stream-1-1-9 readable-stream@~1.1.9
162 verbose lock readable-stream@~1.1.9 /home/vagrant/.npm/f517707b-readable-stream-1-1-9.lock
163 silly addNameRange { name: 'directmail',
163 silly addNameRange   range: '>=0.1.6-0 <0.2.0-0',
163 silly addNameRange   hasData: false }
164 silly addNameRange { name: 'he', range: '>=0.3.6-0 <0.4.0-0', hasData: false }
165 verbose cache add [ 'mailcomposer@~0.2.7', null ]
166 verbose cache add name=undefined spec="mailcomposer@~0.2.7" args=["mailcomposer@~0.2.7",null]
167 verbose parsed url { protocol: null,
167 verbose parsed url   slashes: null,
167 verbose parsed url   auth: null,
167 verbose parsed url   host: null,
167 verbose parsed url   port: null,
167 verbose parsed url   hostname: null,
167 verbose parsed url   hash: null,
167 verbose parsed url   search: null,
167 verbose parsed url   query: null,
167 verbose parsed url   pathname: 'mailcomposer@~0.2.7',
167 verbose parsed url   path: 'mailcomposer@~0.2.7',
167 verbose parsed url   href: 'mailcomposer@~0.2.7' }
168 verbose cache add name="mailcomposer" spec="~0.2.7" args=["mailcomposer","~0.2.7"]
169 verbose parsed url { protocol: null,
169 verbose parsed url   slashes: null,
169 verbose parsed url   auth: null,
169 verbose parsed url   host: null,
169 verbose parsed url   port: null,
169 verbose parsed url   hostname: null,
169 verbose parsed url   hash: null,
169 verbose parsed url   search: null,
169 verbose parsed url   query: null,
169 verbose parsed url   pathname: '~0.2.7',
169 verbose parsed url   path: '~0.2.7',
169 verbose parsed url   href: '~0.2.7' }
170 verbose addNamed [ 'mailcomposer', '~0.2.7' ]
171 verbose addNamed [ null, '>=0.2.7-0 <0.3.0-0' ]
172 silly lockFile c5995a0c-mailcomposer-0-2-7 mailcomposer@~0.2.7
173 verbose lock mailcomposer@~0.2.7 /home/vagrant/.npm/c5995a0c-mailcomposer-0-2-7.lock
174 silly addNameRange { name: 'public-address',
174 silly addNameRange   range: '>=0.1.0-0 <0.2.0-0',
174 silly addNameRange   hasData: false }
175 verbose cache add [ 'simplesmtp@~0.2 || ~0.3', null ]
176 verbose cache add name=undefined spec="simplesmtp@~0.2 || ~0.3" args=["simplesmtp@~0.2 || ~0.3",null]
177 verbose parsed url { protocol: null,
177 verbose parsed url   slashes: null,
177 verbose parsed url   auth: null,
177 verbose parsed url   host: null,
177 verbose parsed url   port: null,
177 verbose parsed url   hostname: null,
177 verbose parsed url   hash: null,
177 verbose parsed url   search: null,
177 verbose parsed url   query: null,
177 verbose parsed url   pathname: 'simplesmtp@~0.2%20||%20~0.3',
177 verbose parsed url   path: 'simplesmtp@~0.2%20||%20~0.3',
177 verbose parsed url   href: 'simplesmtp@~0.2%20||%20~0.3' }
178 verbose cache add name="simplesmtp" spec="~0.2 || ~0.3" args=["simplesmtp","~0.2 || ~0.3"]
179 verbose parsed url { protocol: null,
179 verbose parsed url   slashes: null,
179 verbose parsed url   auth: null,
179 verbose parsed url   host: null,
179 verbose parsed url   port: null,
179 verbose parsed url   hostname: null,
179 verbose parsed url   hash: null,
179 verbose parsed url   search: null,
179 verbose parsed url   query: null,
179 verbose parsed url   pathname: '~0.2%20||%20~0.3',
179 verbose parsed url   path: '~0.2%20||%20~0.3',
179 verbose parsed url   href: '~0.2%20||%20~0.3' }
180 verbose addNamed [ 'simplesmtp', '~0.2 || ~0.3' ]
181 verbose addNamed [ null, '>=0.2.0-0 <0.3.0-0||>=0.3.0-0 <0.4.0-0' ]
182 silly lockFile 53ed49a0-simplesmtp-0-2-0-3 simplesmtp@~0.2 || ~0.3
183 verbose lock simplesmtp@~0.2 || ~0.3 /home/vagrant/.npm/53ed49a0-simplesmtp-0-2-0-3.lock
184 silly addNameRange { name: 'readable-stream',
184 silly addNameRange   range: '>=1.1.9-0 <1.2.0-0',
184 silly addNameRange   hasData: false }
185 silly addNameRange { name: 'mailcomposer',
185 silly addNameRange   range: '>=0.2.7-0 <0.3.0-0',
185 silly addNameRange   hasData: false }
186 silly addNameRange { name: 'simplesmtp',
186 silly addNameRange   range: '>=0.2.0-0 <0.3.0-0||>=0.3.0-0 <0.4.0-0',
186 silly addNameRange   hasData: false }
187 verbose url raw directmail
188 verbose url resolving [ 'https://registry.npmjs.org/', './directmail' ]
189 verbose url resolved https://registry.npmjs.org/directmail
190 info trying registry request attempt 1 at 02:31:04
191 verbose etag "99GJ1TMMNV9O9DSK1Q0MZ4ZEY"
192 http GET https://registry.npmjs.org/directmail
193 verbose url raw public-address
194 verbose url resolving [ 'https://registry.npmjs.org/', './public-address' ]
195 verbose url resolved https://registry.npmjs.org/public-address
196 info trying registry request attempt 1 at 02:31:04
197 verbose etag "EZ3L4NN391AROPIG4A135R8TL"
198 http GET https://registry.npmjs.org/public-address
199 verbose url raw he
200 verbose url resolving [ 'https://registry.npmjs.org/', './he' ]
201 verbose url resolved https://registry.npmjs.org/he
202 info trying registry request attempt 1 at 02:31:04
203 verbose etag "D9VR96VR3BX3YT12L25O2ZGGN"
204 http GET https://registry.npmjs.org/he
205 verbose url raw readable-stream
206 verbose url resolving [ 'https://registry.npmjs.org/', './readable-stream' ]
207 verbose url resolved https://registry.npmjs.org/readable-stream
208 info trying registry request attempt 1 at 02:31:04
209 verbose etag "4GGIV2E5CT6SVR9U7WKIWVLJK"
210 http GET https://registry.npmjs.org/readable-stream
211 verbose url raw simplesmtp
212 verbose url resolving [ 'https://registry.npmjs.org/', './simplesmtp' ]
213 verbose url resolved https://registry.npmjs.org/simplesmtp
214 info trying registry request attempt 1 at 02:31:04
215 verbose etag "DX5YVTZI8GWMT2UT0YIG973UK"
216 http GET https://registry.npmjs.org/simplesmtp
217 verbose url raw mailcomposer
218 verbose url resolving [ 'https://registry.npmjs.org/', './mailcomposer' ]
219 verbose url resolved https://registry.npmjs.org/mailcomposer
220 info trying registry request attempt 1 at 02:31:04
221 verbose etag "EV549HAYCBIK6UJJ6MVJY37HO"
222 http GET https://registry.npmjs.org/mailcomposer
223 http 304 https://registry.npmjs.org/directmail
224 silly registry.get cb [ 304,
224 silly registry.get   { date: 'Tue, 04 Mar 2014 02:31:10 GMT',
224 silly registry.get     server: 'Apache',
224 silly registry.get     connection: 'Keep-Alive',
224 silly registry.get     'keep-alive': 'timeout=10, max=50',
224 silly registry.get     etag: '"99GJ1TMMNV9O9DSK1Q0MZ4ZEY"',
224 silly registry.get     'cache-control': 'max-age=1',
224 silly registry.get     vary: 'Accept' } ]
225 verbose etag directmail from cache
226 http 304 https://registry.npmjs.org/readable-stream
227 silly registry.get cb [ 304,
227 silly registry.get   { date: 'Tue, 04 Mar 2014 02:31:10 GMT',
227 silly registry.get     server: 'Apache',
227 silly registry.get     connection: 'Keep-Alive',
227 silly registry.get     'keep-alive': 'timeout=10, max=50',
227 silly registry.get     etag: '"4GGIV2E5CT6SVR9U7WKIWVLJK"',
227 silly registry.get     'cache-control': 'max-age=1',
227 silly registry.get     vary: 'Accept' } ]
228 verbose etag readable-stream from cache
229 http 304 https://registry.npmjs.org/he
230 silly registry.get cb [ 304,
230 silly registry.get   { date: 'Tue, 04 Mar 2014 02:31:10 GMT',
230 silly registry.get     server: 'Apache',
230 silly registry.get     connection: 'Keep-Alive',
230 silly registry.get     'keep-alive': 'timeout=10, max=50',
230 silly registry.get     etag: '"D9VR96VR3BX3YT12L25O2ZGGN"',
230 silly registry.get     'cache-control': 'max-age=1',
230 silly registry.get     vary: 'Accept' } ]
231 verbose etag he from cache
232 http 304 https://registry.npmjs.org/public-address
233 silly registry.get cb [ 304,
233 silly registry.get   { date: 'Tue, 04 Mar 2014 02:31:10 GMT',
233 silly registry.get     server: 'Apache',
233 silly registry.get     connection: 'Keep-Alive',
233 silly registry.get     'keep-alive': 'timeout=10, max=50',
233 silly registry.get     etag: '"EZ3L4NN391AROPIG4A135R8TL"',
233 silly registry.get     'cache-control': 'max-age=1',
233 silly registry.get     vary: 'Accept' } ]
234 verbose etag public-address from cache
235 silly addNameRange number 2 { name: 'directmail',
235 silly addNameRange   range: '>=0.1.6-0 <0.2.0-0',
235 silly addNameRange   hasData: true }
236 silly addNameRange versions [ 'directmail',
236 silly addNameRange   [ '0.1.0', '0.1.1', '0.1.2', '0.1.3', '0.1.4', '0.1.5', '0.1.6' ] ]
237 verbose addNamed [ 'directmail', '0.1.6' ]
238 verbose addNamed [ '0.1.6', '0.1.6' ]
239 silly lockFile 27ceb7c0-directmail-0-1-6 directmail@0.1.6
240 verbose lock directmail@0.1.6 /home/vagrant/.npm/27ceb7c0-directmail-0-1-6.lock
241 silly addNameRange number 2 { name: 'readable-stream',
241 silly addNameRange   range: '>=1.1.9-0 <1.2.0-0',
241 silly addNameRange   hasData: true }
242 silly addNameRange versions [ 'readable-stream',
242 silly addNameRange   [ '0.0.1',
242 silly addNameRange     '0.0.2',
242 silly addNameRange     '0.0.3',
242 silly addNameRange     '0.0.4',
242 silly addNameRange     '0.1.0',
242 silly addNameRange     '0.2.0',
242 silly addNameRange     '0.3.0',
242 silly addNameRange     '0.3.1',
242 silly addNameRange     '1.0.0',
242 silly addNameRange     '1.0.1',
242 silly addNameRange     '1.0.2',
242 silly addNameRange     '1.0.15',
242 silly addNameRange     '1.0.17',
242 silly addNameRange     '1.1.7',
242 silly addNameRange     '1.1.8',
242 silly addNameRange     '1.1.9',
242 silly addNameRange     '1.0.24',
242 silly addNameRange     '1.0.25',
242 silly addNameRange     '1.1.10',
242 silly addNameRange     '1.0.25-1',
242 silly addNameRange     '1.1.11',
242 silly addNameRange     '1.0.26',
242 silly addNameRange     '1.0.26-1',
242 silly addNameRange     '1.1.11-1',
242 silly addNameRange     '1.0.26-2' ] ]
243 verbose addNamed [ 'readable-stream', '1.1.11' ]
244 verbose addNamed [ '1.1.11', '1.1.11' ]
245 silly lockFile ab60841e-readable-stream-1-1-11 readable-stream@1.1.11
246 verbose lock readable-stream@1.1.11 /home/vagrant/.npm/ab60841e-readable-stream-1-1-11.lock
247 silly addNameRange number 2 { name: 'he', range: '>=0.3.6-0 <0.4.0-0', hasData: true }
248 silly addNameRange versions [ 'he',
248 silly addNameRange   [ '0.1.0',
248 silly addNameRange     '0.1.1',
248 silly addNameRange     '0.1.2',
248 silly addNameRange     '0.1.3',
248 silly addNameRange     '0.1.4',
248 silly addNameRange     '0.1.5',
248 silly addNameRange     '0.1.6',
248 silly addNameRange     '0.1.7',
248 silly addNameRange     '0.1.8',
248 silly addNameRange     '0.1.9',
248 silly addNameRange     '0.1.10',
248 silly addNameRange     '0.2.0',
248 silly addNameRange     '0.2.1',
248 silly addNameRange     '0.3.0',
248 silly addNameRange     '0.3.1',
248 silly addNameRange     '0.3.2',
248 silly addNameRange     '0.3.3',
248 silly addNameRange     '0.3.4',
248 silly addNameRange     '0.3.5',
248 silly addNameRange     '0.3.6' ] ]
249 verbose addNamed [ 'he', '0.3.6' ]
250 verbose addNamed [ '0.3.6', '0.3.6' ]
251 silly lockFile fb88f3cf-he-0-3-6 he@0.3.6
252 verbose lock he@0.3.6 /home/vagrant/.npm/fb88f3cf-he-0-3-6.lock
253 silly addNameRange number 2 { name: 'public-address',
253 silly addNameRange   range: '>=0.1.0-0 <0.2.0-0',
253 silly addNameRange   hasData: true }
254 silly addNameRange versions [ 'public-address', [ '0.1.0' ] ]
255 verbose addNamed [ 'public-address', '0.1.0' ]
256 verbose addNamed [ '0.1.0', '0.1.0' ]
257 silly lockFile fc4818ff-public-address-0-1-0 public-address@0.1.0
258 verbose lock public-address@0.1.0 /home/vagrant/.npm/fc4818ff-public-address-0-1-0.lock
259 silly lockFile 27ceb7c0-directmail-0-1-6 directmail@0.1.6
260 silly lockFile 27ceb7c0-directmail-0-1-6 directmail@0.1.6
261 silly lockFile ab60841e-readable-stream-1-1-11 readable-stream@1.1.11
262 silly lockFile ab60841e-readable-stream-1-1-11 readable-stream@1.1.11
263 silly lockFile a048f12c-directmail-0-1-6 directmail@~0.1.6
264 silly lockFile a048f12c-directmail-0-1-6 directmail@~0.1.6
265 http 304 https://registry.npmjs.org/mailcomposer
266 silly registry.get cb [ 304,
266 silly registry.get   { date: 'Tue, 04 Mar 2014 02:31:11 GMT',
266 silly registry.get     server: 'Apache',
266 silly registry.get     connection: 'Keep-Alive',
266 silly registry.get     'keep-alive': 'timeout=10, max=49',
266 silly registry.get     etag: '"EV549HAYCBIK6UJJ6MVJY37HO"',
266 silly registry.get     'cache-control': 'max-age=1',
266 silly registry.get     vary: 'Accept' } ]
267 verbose etag mailcomposer from cache
268 silly lockFile f517707b-readable-stream-1-1-9 readable-stream@~1.1.9
269 silly lockFile f517707b-readable-stream-1-1-9 readable-stream@~1.1.9
270 silly lockFile fb88f3cf-he-0-3-6 he@0.3.6
271 silly lockFile fb88f3cf-he-0-3-6 he@0.3.6
272 silly lockFile fc4818ff-public-address-0-1-0 public-address@0.1.0
273 silly lockFile fc4818ff-public-address-0-1-0 public-address@0.1.0
274 silly lockFile 92ca361f-he-0-3-6 he@~0.3.6
275 silly lockFile 92ca361f-he-0-3-6 he@~0.3.6
276 silly lockFile 0d2be6b6-public-address-0-1-0 public-address@~0.1.0
277 silly lockFile 0d2be6b6-public-address-0-1-0 public-address@~0.1.0
278 silly addNameRange number 2 { name: 'mailcomposer',
278 silly addNameRange   range: '>=0.2.7-0 <0.3.0-0',
278 silly addNameRange   hasData: true }
279 silly addNameRange versions [ 'mailcomposer',
279 silly addNameRange   [ '0.1.0',
279 silly addNameRange     '0.1.1',
279 silly addNameRange     '0.1.2',
279 silly addNameRange     '0.1.3',
279 silly addNameRange     '0.1.4',
279 silly addNameRange     '0.1.5',
279 silly addNameRange     '0.1.6',
279 silly addNameRange     '0.1.7',
279 silly addNameRange     '0.1.8',
279 silly addNameRange     '0.1.9',
279 silly addNameRange     '0.1.10',
279 silly addNameRange     '0.1.11',
279 silly addNameRange     '0.1.12',
279 silly addNameRange     '0.1.13',
279 silly addNameRange     '0.1.14',
279 silly addNameRange     '0.1.15',
279 silly addNameRange     '0.1.16',
279 silly addNameRange     '0.1.17',
279 silly addNameRange     '0.1.18',
279 silly addNameRange     '0.1.19',
279 silly addNameRange     '0.1.20',
279 silly addNameRange     '0.1.21',
279 silly addNameRange     '0.1.22',
279 silly addNameRange     '0.1.23',
279 silly addNameRange     '0.1.24',
279 silly addNameRange     '0.1.25',
279 silly addNameRange     '0.1.26',
279 silly addNameRange     '0.1.27',
279 silly addNameRange     '0.1.28',
279 silly addNameRange     '0.1.29',
279 silly addNameRange     '0.1.30',
279 silly addNameRange     '0.1.31',
279 silly addNameRange     '0.1.33',
279 silly addNameRange     '0.1.34',
279 silly addNameRange     '0.2.0',
279 silly addNameRange     '0.2.1',
279 silly addNameRange     '0.2.2',
279 silly addNameRange     '0.2.3',
279 silly addNameRange     '0.2.4',
279 silly addNameRange     '0.2.5',
279 silly addNameRange     '0.2.6',
279 silly addNameRange     '0.2.7',
279 silly addNameRange     '0.2.8' ] ]
280 verbose addNamed [ 'mailcomposer', '0.2.8' ]
281 verbose addNamed [ '0.2.8', '0.2.8' ]
282 silly lockFile e39bbbd5-mailcomposer-0-2-8 mailcomposer@0.2.8
283 verbose lock mailcomposer@0.2.8 /home/vagrant/.npm/e39bbbd5-mailcomposer-0-2-8.lock
284 silly lockFile e39bbbd5-mailcomposer-0-2-8 mailcomposer@0.2.8
285 silly lockFile e39bbbd5-mailcomposer-0-2-8 mailcomposer@0.2.8
286 silly lockFile c5995a0c-mailcomposer-0-2-7 mailcomposer@~0.2.7
287 silly lockFile c5995a0c-mailcomposer-0-2-7 mailcomposer@~0.2.7
288 http 304 https://registry.npmjs.org/simplesmtp
289 silly registry.get cb [ 304,
289 silly registry.get   { date: 'Tue, 04 Mar 2014 02:31:15 GMT',
289 silly registry.get     server: 'Apache',
289 silly registry.get     connection: 'Keep-Alive',
289 silly registry.get     'keep-alive': 'timeout=10, max=50',
289 silly registry.get     etag: '"DX5YVTZI8GWMT2UT0YIG973UK"',
289 silly registry.get     'cache-control': 'max-age=1',
289 silly registry.get     vary: 'Accept' } ]
290 verbose etag simplesmtp from cache
291 silly addNameRange number 2 { name: 'simplesmtp',
291 silly addNameRange   range: '>=0.2.0-0 <0.3.0-0||>=0.3.0-0 <0.4.0-0',
291 silly addNameRange   hasData: true }
292 silly addNameRange versions [ 'simplesmtp',
292 silly addNameRange   [ '0.1.0',
292 silly addNameRange     '0.1.2',
292 silly addNameRange     '0.1.3',
292 silly addNameRange     '0.1.4',
292 silly addNameRange     '0.1.5',
292 silly addNameRange     '0.1.6',
292 silly addNameRange     '0.1.7',
292 silly addNameRange     '0.1.8',
292 silly addNameRange     '0.1.9',
292 silly addNameRange     '0.1.11',
292 silly addNameRange     '0.1.12',
292 silly addNameRange     '0.1.13',
292 silly addNameRange     '0.1.14',
292 silly addNameRange     '0.1.15',
292 silly addNameRange     '0.1.16',
292 silly addNameRange     '0.1.17',
292 silly addNameRange     '0.1.18',
292 silly addNameRange     '0.1.19',
292 silly addNameRange     '0.1.20',
292 silly addNameRange     '0.1.21',
292 silly addNameRange     '0.1.22',
292 silly addNameRange     '0.1.23',
292 silly addNameRange     '0.1.24',
292 silly addNameRange     '0.1.25',
292 silly addNameRange     '0.1.26',
292 silly addNameRange     '0.1.27',
292 silly addNameRange     '0.1.28',
292 silly addNameRange     '0.1.29',
292 silly addNameRange     '0.1.30',
292 silly addNameRange     '0.2.0',
292 silly addNameRange     '0.2.1',
292 silly addNameRange     '0.2.2',
292 silly addNameRange     '0.2.3',
292 silly addNameRange     '0.2.4',
292 silly addNameRange     '0.2.6',
292 silly addNameRange     '0.2.7',
292 silly addNameRange     '0.3.0',
292 silly addNameRange     '0.3.1',
292 silly addNameRange     '0.3.2',
292 silly addNameRange     '0.3.3',
292 silly addNameRange     '0.3.4',
292 silly addNameRange     '0.3.5',
292 silly addNameRange     '0.3.6',
292 silly addNameRange     '0.3.7',
292 silly addNameRange     '0.3.8',
292 silly addNameRange     '0.3.9',
292 silly addNameRange     '0.3.10',
292 silly addNameRange     '0.3.11',
292 silly addNameRange     '0.3.13',
292 silly addNameRange     '0.3.14',
292 silly addNameRange     '0.3.15',
292 silly addNameRange     '0.3.16',
292 silly addNameRange     '0.3.18',
292 silly addNameRange     '0.3.19',
292 silly addNameRange     '0.3.20',
292 silly addNameRange     '0.3.21',
292 silly addNameRange     '0.3.22' ] ]
293 verbose addNamed [ 'simplesmtp', '0.3.22' ]
294 verbose addNamed [ '0.3.22', '0.3.22' ]
295 silly lockFile f558839b-simplesmtp-0-3-22 simplesmtp@0.3.22
296 verbose lock simplesmtp@0.3.22 /home/vagrant/.npm/f558839b-simplesmtp-0-3-22.lock
297 silly lockFile f558839b-simplesmtp-0-3-22 simplesmtp@0.3.22
298 silly lockFile f558839b-simplesmtp-0-3-22 simplesmtp@0.3.22
299 silly lockFile 53ed49a0-simplesmtp-0-2-0-3 simplesmtp@~0.2 || ~0.3
300 silly lockFile 53ed49a0-simplesmtp-0-2-0-3 simplesmtp@~0.2 || ~0.3
301 silly resolved [ { name: 'directmail',
301 silly resolved     version: '0.1.6',
301 silly resolved     description: 'Sendmail replacement, sends mail directly to recipients SMTP server',
301 silly resolved     main: 'index.js',
301 silly resolved     scripts: { test: 'nodeunit tests' },
301 silly resolved     keywords: [ 'SMTP', 'sendmail', 'Nodemailer', 'email' ],
301 silly resolved     author: { name: 'Andris Reinman' },
301 silly resolved     license: 'MIT',
301 silly resolved     dependencies: { simplesmtp: '~0.3.15' },
301 silly resolved     devDependencies: { nodeunit: '~0.8.2' },
301 silly resolved     repository: { type: 'git', url: 'git://github.com/andris9/directmail.git' },
301 silly resolved     readme: '# DirectMail\n\nSendmail alternative to send e-mails directly to recipients without a relaying service.\n\n### Support DirectMail development\n\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\nIf you want to support with Bitcoins then my wallet address is `15Z8ADxhssKUiwP3jbbqJwA21744KMCfTM`\n\n## Usage\n\n### Setup\n\nRequire *directmail* object\n\n    var createDirectmail = require("directmail"),\n        directmail = createDirectmail(options);\n\nWhere\n\n  * **options** is an optional options object with the following properties\n    * *debug* - if set to true, prints all traffic to console\n    * *name* - hostname to be used when introducing the client to the MX server\n\n### Send mail\n\nPush a message to the outgoing queue\n\n    directmail.send({\n        from: "sender@example.com",\n        recipients: ["receiver1@example.com", "receiver2@example.com"],\n        message: "Subject: test\\r\\n\\r\\nHello world!"\n    });\n\nWhere\n\n  * **from** (string) is the e-mail address of the sender\n  * **recipients** (array) is an array of recipient e-mails. Put all `to`, `cc` and `bcc` addresses here.\n  * **message** (string|buffer) is the RFC2822 message to be sent\n\n### Check queue length\n\nYou can check the count of unsent messages from the `.length` property of the directmail object\n\n    console.log(directmail.length); // nr of messages to be sent\n\nIf you try to send a message with multiple recipients then every unique recipient domain counts as a different message.\n\n## Issues\n\n*Directmail* is very inefficient as it queues all e-mails to be sent into memory. Additionally, if a message is not yet sent and the process is closed, all data about queued messages are lost. Thus *directmail* is only suitable for low throughput systems, like password remainders and such, where the message can be processed immediatelly. *Directmail* is not suitable for spamming.\n\nWhile not being 100% reliable (remember - if process exits, entire queue is lost), *directmail* can still handle sending errors, graylisting and such. If a message can not be sent, it is requeued and retried later.\n\n## License\n\n**MIT**\n',
301 silly resolved     readmeFilename: 'README.md',
301 silly resolved     bugs: { url: 'https://github.com/andris9/directmail/issues' },
301 silly resolved     homepage: 'https://github.com/andris9/directmail',
301 silly resolved     _id: 'directmail@0.1.6',
301 silly resolved     _from: 'directmail@~0.1.6' },
301 silly resolved   { name: 'readable-stream',
301 silly resolved     version: '1.1.11',
301 silly resolved     description: 'An exploration of a new kind of readable streams for Node.js',
301 silly resolved     main: 'readable.js',
301 silly resolved     dependencies:
301 silly resolved      { 'core-util-is': '~1.0.0',
301 silly resolved        string_decoder: '~0.10.x',
301 silly resolved        debuglog: '0.0.2' },
301 silly resolved     devDependencies: { tap: '~0.2.6' },
301 silly resolved     scripts: { test: 'tap test/simple/*.js' },
301 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/readable-stream' },
301 silly resolved     keywords: [ 'readable', 'stream', 'pipe' ],
301 silly resolved     author:
301 silly resolved      { name: 'Isaac Z. Schlueter',
301 silly resolved        email: 'i@izs.me',
301 silly resolved        url: 'http://blog.izs.me/' },
301 silly resolved     license: 'MIT',
301 silly resolved     optionalDependencies: { debuglog: '0.0.2' },
301 silly resolved     readme: '# readable-stream\n\n***Node-core streams for userland***\n\n[![NPM](https://nodei.co/npm/readable-stream.png?downloads=true)](https://nodei.co/npm/readable-stream/)\n[![NPM](https://nodei.co/npm-dl/readable-stream.png)](https://nodei.co/npm/readable-stream/)\n\nThis package is a mirror of the Streams2 and Streams3 implementations in Node-core.\n\nIf you want to guarantee a stable streams base, regardless of what version of Node you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *"stream"* module in Node-core.\n\n**readable-stream** comes in two major versions, v1.0.x and v1.1.x. The former tracks the Streams2 implementation in Node 0.10, including bug-fixes and minor improvements as they are added. The latter tracks Streams3 as it develops in Node 0.11; we will likely see a v1.2.x branch for Node 0.12.\n\n**readable-stream** uses proper patch-level versioning so if you pin to `"~1.0.0"` you’ll get the latest Node 0.10 Streams2 implementation, including any fixes and minor non-breaking improvements. The patch-level versions of 1.0.x and 1.1.x should mirror the patch-level versions of Node-core releases. You should prefer the **1.0.x** releases for now and when you’re ready to start using Streams3, pin to `"~1.1.0"`\n\n',
301 silly resolved     readmeFilename: 'README.md',
301 silly resolved     bugs: { url: 'https://github.com/isaacs/readable-stream/issues' },
301 silly resolved     homepage: 'https://github.com/isaacs/readable-stream',
301 silly resolved     _id: 'readable-stream@1.1.11',
301 silly resolved     _from: 'readable-stream@~1.1.9' },
301 silly resolved   { name: 'he',
301 silly resolved     version: '0.3.6',
301 silly resolved     description: 'A robust HTML entities encoder/decoder with full Unicode support.',
301 silly resolved     homepage: 'http://mths.be/he',
301 silly resolved     main: 'he.js',
301 silly resolved     bin: { he: 'bin/he' },
301 silly resolved     man: [ 'man/he.1' ],
301 silly resolved     keywords:
301 silly resolved      [ 'string',
301 silly resolved        'entities',
301 silly resolved        'entity',
301 silly resolved        'html',
301 silly resolved        'encode',
301 silly resolved        'decode',
301 silly resolved        'unicode' ],
301 silly resolved     licenses: [ [Object] ],
301 silly resolved     author: { name: 'Mathias Bynens', url: 'http://mathiasbynens.be/' },
301 silly resolved     repository: { type: 'git', url: 'https://github.com/mathiasbynens/he.git' },
301 silly resolved     bugs: { url: 'https://github.com/mathiasbynens/he/issues' },
301 silly resolved     files: [ 'LICENSE-MIT.txt', 'he.js', 'bin/', 'man/' ],
301 silly resolved     directories: { test: 'tests' },
301 silly resolved     scripts: { test: 'node tests/tests.js' },
301 silly resolved     dependencies: {},
301 silly resolved     devDependencies:
301 silly resolved      { grunt: '~0.4.1',
301 silly resolved        'grunt-shell': '~0.3.1',
301 silly resolved        'grunt-template': '~0.2.0',
301 silly resolved        istanbul: '~0.1.43',
301 silly resolved        jsesc: '~0.4.1',
301 silly resolved        lodash: '~1.3.1',
301 silly resolved        'qunit-clib': '~1.3.0',
301 silly resolved        qunitjs: '~1.11.0',
301 silly resolved        regenerate: '~0.5.2',
301 silly resolved        requirejs: '~2.1.8' },
301 silly resolved     readme: '# he [![Build status](https://travis-ci.org/mathiasbynens/he.png?branch=master)](https://travis-ci.org/mathiasbynens/he) [![Dependency status](https://gemnasium.com/mathiasbynens/he.png)](https://gemnasium.com/mathiasbynens/he)\n\n_he_ (for “HTML entities”) is a robust HTML entity encoder/decoder written in JavaScript. It supports [all standardized named character references as per HTML](http://www.whatwg.org/specs/web-apps/current-work/multipage/named-character-references.html), handles [ambiguous ampersands](http://mathiasbynens.be/notes/ambiguous-ampersands) and other edge cases [just like a browser would](http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references), has an extensive test suite, and — contrary to many other JavaScript solutions — _he_ handles astral Unicode symbols just fine. [An online demo is available.](http://mothereff.in/html-entities)\n\n## Installation\n\nVia [npm](http://npmjs.org/):\n\n```bash\nnpm install he\n```\n\nVia [Bower](http://bower.io/):\n\n```bash\nbower install he\n```\n\nVia [Component](https://github.com/component/component):\n\n```bash\ncomponent install mathiasbynens/he\n```\n\nIn a browser:\n\n```html\n<script src="he.js"></script>\n```\n\nIn [Narwhal](http://narwhaljs.org/), [Node.js](http://nodejs.org/), and [RingoJS](http://ringojs.org/):\n\n```js\nvar he = require(\'he\');\n```\n\nIn [Rhino](http://www.mozilla.org/rhino/):\n\n```js\nload(\'he.js\');\n```\n\nUsing an AMD loader like [RequireJS](http://requirejs.org/):\n\n```js\nrequire(\n  {\n    \'paths\': {\n      \'he\': \'path/to/he\'\n    }\n  },\n  [\'he\'],\n  function(he) {\n    console.log(he);\n  }\n);\n```\n\n## API\n\n### `he.version`\n\nA string representing the semantic version number.\n\n### `he.encode(text, options)`\n\nThis function takes a string of text and encodes (by default) any symbols that aren’t printable ASCII symbols, replacing them with character references. As long as the input string contains allowed code points only, the return value of this function is always valid HTML.\n\n```js\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\');\n// → \'foo &#xA9; bar &#x2260; baz &#x1D306; qux\'\n```\n\nThe `options` object is optional. It recognizes the following properties:\n\n#### `useNamedReferences`\n\nThe default value for the `useNamedReferences` option is `false`. This means that `encode()` will not use any named character references (e.g. `&copy;`) in the output — hexadecimal escapes (e.g. `&#xA9;`) will be used instead. Set it to `true` to enable the use of named references.\n\n**Note that if compatibility with older browsers is a concern, this option should remain disabled.**\n\n```js\n// Using the global default setting (defaults to `false`):\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\');\n// → \'foo &#xA9; bar &#x2260; baz &#x1D306; qux\'\n\n// Passing an `options` object to `encode`, to explicitly disallow named references:\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\', {\n  \'useNamedReferences\': false\n});\n// → \'foo &#xA9; bar &#x2260; baz &#x1D306; qux\'\n\n// Passing an `options` object to `encode`, to explicitly allow named references:\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\', {\n  \'useNamedReferences\': true\n});\n// → \'foo &copy; bar &ne; baz &#x1D306; qux\'\n```\n\n#### `encodeEverything`\n\nThe default value for the `encodeEverything` option is `false`. This means that `encode()` will not use any character references for printable ASCII symbols that don’t need escaping. Set it to `true` to encode every symbol in the input string.\n\n```js\n// Using the global default setting (defaults to `false`):\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\');\n// → \'foo &#xA9; bar &#x2260; baz &#x1D306; qux\'\n\n// Passing an `options` object to `encode`, to explicitly encode all symbols:\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\', {\n  \'encodeEverything\': true\n});\n// → \'&#x66;&#x6F;&#x6F;&#x20;&#xA9;&#x20;&#x62;&#x61;&#x72;&#x20;&#x2260;&#x20;&#x62;&#x61;&#x7A;&#x20;&#x1D306;&#x20;&#x71;&#x75;&#x78;\'\n\n// This setting can be combined with the `useNamedReferences` option:\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\', {\n  \'encodeEverything\': true,\n  \'useNamedReferences\': true\n});\n// → \'&#x66;&#x6F;&#x6F;&#x20;&copy;&#x20;&#x62;&#x61;&#x72;&#x20;&ne;&#x20;&#x62;&#x61;&#x7A;&#x20;&#x1D306;&#x20;&#x71;&#x75;&#x78;\'\n```\n\n#### Overriding default `encode` options globally\n\nThe global default setting can be overridden by modifying the `he.encode.options` object. This saves you from passing in an `options` object for every call to `encode` if you want to use the non-default setting.\n\n```js\n// Read the global default setting:\nhe.encode.options.useNamedReferences;\n// → `false` by default\n\n// Override the global default setting:\nhe.encode.options.useNamedReferences = true;\n\n// Using the global default setting, which is now `true`:\nhe.encode(\'foo © bar ≠ baz 𝌆 qux\');\n// → \'foo &copy; bar &ne; baz &#x1D306; qux\'\n```\n\n### `he.decode(html, options)`\n\nThis function takes a string of HTML and decodes any named and numerical character references in it using [the algorithm described in section 12.2.4.69 of the HTML spec](http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references).\n\n```js\nhe.decode(\'foo &copy; bar &ne; baz &#x1D306; qux\');\n// → \'foo © bar ≠ baz 𝌆 qux\'\n```\n\nThe `options` object is optional. It recognizes the following properties:\n\n#### `isAttributeValue`\n\nThe default value for the `isAttributeValue` option is `false`. This means that `decode()` will decode the string as if it were used in a text context in an HTML document. HTML has different rules for parsing character references in attribute values — set this option to `true` to treat the input string as if it were used as an attribute value.\n\n```js\n// Using the global default setting (defaults to `false`, i.e. HTML text context):\nhe.decode(\'foo&ampbar\');\n// → \'foo&bar\'\n\n// Passing an `options` object to `decode`, to explicitly assume an HTML text context:\nhe.decode(\'foo&ampbar\', {\n  \'isAttributeValue\': false\n});\n// → \'foo&bar\'\n\n// Passing an `options` object to `decode`, to explicitly assume an HTML attribute value context:\nhe.decode(\'foo&ampbar\', {\n  \'isAttributeValue\': true\n});\n// → \'foo&ampbar\'\n```\n\n#### `strict`\n\nThe default value for the `strict` option is `false`. This means that `decode()` will decode any HTML text content you feed it, even if it contains any entities that cause [parse errors](http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references). To throw an error when such invalid HTML is encountered, set the `strict` option to `true`. This option makes it possible to use _he_ as part of HTML parsers and HTML validators.\n\n```js\n// Using the global default setting (defaults to `false`, i.e. error-tolerant mode):\nhe.decode(\'foo&ampbar\');\n// → \'foo&bar\'\n\n// Passing an `options` object to `decode`, to explicitly enable error-tolerant mode:\nhe.decode(\'foo&ampbar\', {\n  \'strict\': false\n});\n// → \'foo&bar\'\n\n// Passing an `options` object to `decode`, to explicitly enable strict mode:\nhe.decode(\'foo&ampbar\', {\n  \'strict\': true\n});\n// → Parse error\n```\n\n#### Overriding default `decode` options globally\n\nThe global default settings for the `decode` function can be overridden by modifying the `he.decode.options` object. This saves you from passing in an `options` object for every call to `decode` if you want to use a non-default setting.\n\n```js\n// Read the global default setting:\nhe.decode.options.isAttributeValue;\n// → `false` by default\n\n// Override the global default setting:\nhe.decode.options.isAttributeValue = true;\n\n// Using the global default setting, which is now `true`:\nhe.decode(\'foo&ampbar\');\n// → \'foo&ampbar\'\n```\n\n### `he.escape(text)`\n\nThis function takes a string of text and escapes it for use in text contexts in XML or HTML documents. Only the following characters are escaped: `&`, `<`, `>`, `"`, and `\'`.\n\n```js\nhe.escape(\'<img src=\\\'x\\\' onerror="prompt(1)">\');\n// → \'&lt;img src=&#x27;x&#x27; onerror=&quot;prompt(1)&quot;&gt;\'\n```\n\n### `he.unescape(html, options)`\n\n`he.unescape` is an alias for `he.decode`. It takes a string of HTML and decodes any named and numerical character references in it.\n\n### Using the `he` binary\n\nTo use the `he` binary in your shell, simply install _he_ globally using npm:\n\n```bash\nnpm install -g he\n```\n\nAfter that you will be able to encode/decode HTML entities from the command line:\n\n```bash\n$ he --encode \'föo ♥ bår 𝌆 baz\'\nf&#xF6;o &#x2665; b&#xE5;r &#x1D306; baz\n\n$ he --encode --use-named-refs \'föo ♥ bår 𝌆 baz\'\nf&ouml;o &hearts; b&aring;r &#x1D306; baz\n\n$ he --decode \'f&ouml;o &hearts; b&aring;r &#x1D306; baz\'\nföo ♥ bår 𝌆 baz\n```\n\nRead a local text file, encode it for use in an HTML text context, and save the result to a new file:\n\n```bash\n$ he --encode < foo.txt > foo-escaped.html\n```\n\nOr do the same with an online text file:\n\n```bash\n$ curl -sL "http://git.io/HnfEaw" | he --encode > escaped.html\n```\n\nOr, the opposite — read a local file containing a snippet of HTML in a text context, decode it back to plain text, and save the result to a new file:\n\n```bash\n$ he --decode < foo-escaped.html > foo.txt\n```\n\nOr do the same with an online HTML snippet:\n\n```bash\n$ curl -sL "http://git.io/HnfEaw" | he --decode > decoded.txt\n```\n\nSee `he --help` for the full list of options.\n\n## Support\n\nhe has been tested in at least Chrome 27-29, Firefox 3-22, Safari 4-6, Opera 10-12, IE 6-10, Node.js v0.10.0, Narwhal 0.3.2, RingoJS 0.8-0.9, PhantomJS 1.9.0, and Rhino 1.7RC4.\n\n## Unit tests & code coverage\n\nAfter cloning this repository, run `npm install` to install the dependencies needed for he development and testing. You may want to install Istanbul _globally_ using `npm install istanbul -g`.\n\nOnce that’s done, you can run the unit tests in Node using `npm test` or `node tests/tests.js`. To run the tests in Rhino, Ringo, Narwhal, and web browsers as well, use `grunt test`.\n\nTo generate [the code coverage report](http://rawgithub.com/mathiasbynens/he/master/coverage/he/he.js.html), use `grunt cover`.\n\n## Acknowledgements\n\nThanks to [Simon Pieters](http://simon.html5.org/) (@zcorpan) for the many suggestions.\n\n## Author\n\n| [![twitter/mathias](http://gravatar.com/avatar/24e08a9ea84deb17ae121074d0f17125?s=70)](http://twitter.com/mathias "Follow @mathias on Twitter") |\n|---|\n| [Mathias Bynens](http://mathiasbynens.be/) |\n\n## License\n\n_he_ is available under the [MIT](http://mths.be/mit) license.\n',
301 silly resolved     readmeFilename: 'README.md',
301 silly resolved     _id: 'he@0.3.6',
301 silly resolved     _from: 'he@~0.3.6' },
301 silly resolved   { name: 'public-address',
301 silly resolved     version: '0.1.0',
301 silly resolved     description: 'Resolve public IP address and hostname',
301 silly resolved     main: 'index.js',
301 silly resolved     scripts: { test: 'nodeunit tests/' },
301 silly resolved     repository:
301 silly resolved      { type: 'git',
301 silly resolved        url: 'git://github.com/andris9/public-address.git' },
301 silly resolved     author: { name: 'Andris Reinman' },
301 silly resolved     license: 'MIT',
301 silly resolved     bugs: { url: 'https://github.com/andris9/public-address/issues' },
301 silly resolved     homepage: 'https://github.com/andris9/public-address',
301 silly resolved     devDependencies: { nodeunit: '~0.8.2' },
301 silly resolved     readme: '# public-address\n\nResolve the public IP address and hostname of your current machine.\n\nThis module makes a HTTP request to www.remoteaddress.net IP resolving service.\n\n## Installation\n\n    npm install public-address\n\n## Usage\n\n    var publicAddress = require("public-address");\n    publicAddress([options,] callback);\n\nWhere\n\n  * **options** - an optional options object. Everything in this object is passed to the HTTP request object (eg. `agent`, `localAddress` etc.)\n  * **callback** - function to run once the resolving succeeded or failed. Has error object and response data as arguments\n\nThe data argument for `callback` has the following properties\n\n  * **address** - public IP address\n  * **hostname** - (if available) hostname of the IP address\n\n## Example\n\nResolve public IP:\n\n    publicAddress(function(err, data){\n        console.log(err || data);\n    });\n\nExample response:\n\n    {\n        "address": "193.152.61.139",\n        "hostname": "gprs-inet-61-139.example.com"\n    }\n\n## License\n\n**MIT**\n',
301 silly resolved     readmeFilename: 'README.md',
301 silly resolved     _id: 'public-address@0.1.0',
301 silly resolved     _from: 'public-address@~0.1.0' },
301 silly resolved   { name: 'mailcomposer',
301 silly resolved     description: 'Compose E-Mail messages',
301 silly resolved     version: '0.2.8',
301 silly resolved     author: { name: 'Andris Reinman' },
301 silly resolved     maintainers: [ [Object] ],
301 silly resolved     repository:
301 silly resolved      { type: 'git',
301 silly resolved        url: 'http://github.com/andris9/mailcomposer.git' },
301 silly resolved     scripts: { test: 'nodeunit test/' },
301 silly resolved     main: './lib/mailcomposer',
301 silly resolved     licenses: [ [Object] ],
301 silly resolved     dependencies:
301 silly resolved      { mimelib: '~0.2.14',
301 silly resolved        mime: '1.2.9',
301 silly resolved        he: '~0.3.6',
301 silly resolved        punycode: '~1.2.3',
301 silly resolved        'follow-redirects': '0.0.3',
301 silly resolved        'dkim-signer': '~0.1.0' },
301 silly resolved     devDependencies: { nodeunit: '*', mailparser: '~0.4.0' },
301 silly resolved     engine: { node: '>=0.4' },
301 silly resolved     keywords: [ 'e-mail', 'mime', 'parser' ],
301 silly resolved     readme: '# mailcomposer\n\n**mailcomposer** is a Node.JS module for generating e-mail messages that can be\nstreamed to SMTP or file.\n\nThis is a standalone module that only generates raw e-mail source, you need to\nwrite your own or use an existing transport mechanism (SMTP client, Amazon SES,\nSendGrid etc). **mailcomposer** frees you from the tedious task of generating\n[rfc2822](http://tools.ietf.org/html/rfc2822) compatible messages.\n\n[![Build Status](https://secure.travis-ci.org/andris9/mailcomposer.png)](http://travis-ci.org/andris9/mailcomposer)\n\n**mailcomposer** supports:\n\n  * **Unicode** to use any characters ✔\n  * **HTML** content as well as **plain text** alternative\n  * **Attachments** and streaming for larger files (use strings, buffers, files or binary streams as attachments)\n  * **Embedded images** in HTML\n  * **DKIM** signing\n  * usage of **your own** transport mechanism\n\n## Support mailcomposer development\n\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\n## Installation\n\nInstall through NPM\n\n    npm install mailcomposer\n\n## Usage\n\n### Include mailcomposer module\n\n```javascript\nvar MailComposer = require("mailcomposer").MailComposer;\n```\n\n### Create a new `MailComposer` instance\n\n```javascript\nvar mailcomposer = new MailComposer([options]);\n```\n\nWhere `options` is an optional options object with the following possible properties:\n\n  * **escapeSMTP** - if set replaces dots in the beginning of a line with double dots\n  * **encoding** - sets transfer encoding for the textual parts (defaults to `"quoted-printable"`)\n  * **charset** - sets output character set for strings (defaults to `"utf-8"`)\n  * **keepBcc** - if set to true, includes `Bcc:` field in the message headers. Useful for *sendmail* command.\n  * **forceEmbeddedImages** - convert image urls and absolute paths in HTML to embedded attachments.\n\n### Simple example\n\nThe following example generates a simple e-mail message with plaintext and html\nbody.\n\n```javascript\nvar MailComposer = require("mailcomposer").MailComposer;\n    mailcomposer = new MailComposer(),\n    fs = require("fs");\n\n// add additional header field\nmailcomposer.addHeader("x-mailer", "Nodemailer 1.0");\n\n// setup message data\nmailcomposer.setMessageOption({\n    from: "andris@tr.ee",\n    to: "andris@node.ee",\n    body: "Hello world!",\n    html: "<b>Hello world!</b>"\n});\n\nmailcomposer.streamMessage();\n\n// pipe the output to a file\nmailcomposer.pipe(fs.createWriteStream("test.eml"));\n```\n\nThe output for such a script (the contents for "test.eml") would look like:\n\n    MIME-Version: 1.0\n    X-Mailer: Nodemailer 1.0\n    From: andris@tr.ee\n    To: andris@node.ee\n    Content-Type: multipart/alternative;\n            boundary="----mailcomposer-?=_1-1328088797399"\n\n    ------mailcomposer-?=_1-1328088797399\n    Content-Type: text/plain; charset=utf-8\n    Content-Transfer-Encoding: quoted-printable\n\n    Hello world!\n    ------mailcomposer-?=_1-1328088797399\n    Content-Type: text/html; charset=utf-8\n    Content-Transfer-Encoding: quoted-printable\n\n    <b>Hello world!</b>\n    ------mailcomposer-?=_1-1328088797399--\n\n## API\n\n### Add custom headers\n\nHeaders can be added with `mailcomposer.addHeader(key, value[, formatted])` where `formatted` indicates if the value should be kept as is. If the value is missing or falsy, header value is sanitized and folded. If true, the value is passed to output as is.\n\n```javascript\nvar mailcomposer = new MailComposer();\nmailcomposer.addHeader("x-mailer", "Nodemailer 1.0");\n```\n\nIf you add an header value with the same key several times, all of the values will be used\nin the generated header. For example:\n\n```javascript\nmailcomposer.addHeader("x-mailer", "Nodemailer 1.0");\nmailcomposer.addHeader("x-mailer", "Nodemailer 2.0");\n```\n\nWill be generated into\n\n    ...\n    X-Mailer: Nodemailer 1.0\n    X-Mailer: Nodemailer 2.0\n    ...\n\nThe contents of the field value is not edited in any way (except for the folding),\nso if you want to use unicode symbols you need to escape these to mime words\nby yourself. Exception being object values - in this case the object\nis automatically JSONized and mime encoded.\n\n```javascript\n// using objects as header values is allowed (will be converted to JSON)\nvar apiOptions = {};\napiOptions.category = "newuser";\napiOptions.tags = ["user", "web"];\nmailcomposer.addHeader("X-SMTPAPI", apiOptions)\n```\n\n### Add message parts\n\nYou can set message sender, receiver, subject line, message body etc. with\n`mailcomposer.setMessageOption(options)` where options is an object with the\ndata to be set. This function overwrites any previously set values with the\nsame key\n\nThe following example creates a simple e-mail with sender being `andris@tr.ee`,\nreceiver `andris@node.ee` and plaintext part of the message as `Hello world!`:\n\n```javascript\nmailcomposer.setMessageOption({\n    from: "andris@tr.ee",\n    to: "andris@node.ee",\n    body: "Hello world!"\n});\n```\n\nPossible options that can be used are (all fields accept unicode):\n\n  * **from** (alias `sender`) - the sender of the message. If several addresses are given, only the first one will be used\n  * **to** - receivers for the `To:` field\n  * **cc** - receivers for the `Cc:` field\n  * **bcc** - receivers for the `Bcc:` field\n  * **replyTo** (alias `reply_to`) - e-mail address for the `Reply-To:` field\n  * **inReplyTo** - The message-id this message is replying\n  * **references** - Message-id list\n  * **subject** - the subject line of the message\n  * **body** (alias `text`) - the plaintext part of the message\n  * **html** - the HTML part of the message\n  * **envelope** - optional SMTP envelope, if auto generated envelope is not suitable\n\nThis method can be called several times\n\n```javascript\nmailcomposer.setMessageOption({from: "andris@tr.ee"});\nmailcomposer.setMessageOption({to: "andris@node.ee"});\nmailcomposer.setMessageOption({body: "Hello world!"});\n```\n\nTrying to set the same key several times will yield in overwrite\n\n```javascript\nmailcomposer.setMessageOption({body: "Hello world!"});\nmailcomposer.setMessageOption({body: "Hello world?"});\n// body contents will be "Hello world?"\n```\n\n### Address format\n\nAll e-mail address fields take structured e-mail lists (comma separated)\nas the input. Unicode is allowed for all the parts (receiver name, e-mail username\nand domain) of the address. If the domain part contains unicode symbols, it is\nautomatically converted into punycode, user part will be converted into UTF-8\nmime word.\n\nE-mail addresses can be a plain e-mail addresses\n\n    username@example.com\n\nor with a formatted name\n\n    \'Ноде Майлер\' <username@example.com>\n\nOr in case of comma separated lists, the formatting can be mixed\n\n    username@example.com, \'Ноде Майлер\' <username@example.com>, "Name, User" <username@example.com>\n\n### SMTP envelope\n\nSMTP envelope is usually auto generated from `from`, `to`, `cc` and `bcc` fields but\nif for some reason you want to specify it yourself, you can do it with `envelope` property.\n\n`envelope` is an object with the following params: `from`, `to`, `cc` and `bcc` just like\nwith regular mail options. You can also use the regular address format.\n\n```javascript\nmailOptions = {\n    ...,\n    from: "mailer@node.ee",\n    to: "daemon@node.ee",\n    envelope: {\n        from: "Daemon <deamon@node.ee>",\n        to: "mailer@node.ee, Mailer <mailer2@node.ee>"\n    }\n}\n```\n\n### Add attachments\n\nAttachments can be added with `mailcomposer.addAttachment(attachment)` where\n`attachment` is an object with attachment (meta)data with the following possible\nproperties:\n\n  * **fileName** (alias `filename`) - filename to be reported as the name of the attached file, use of unicode is allowed\n  * **cid** - content id for using inline images in HTML message source\n  * **contents** - String or a Buffer contents for the attachment\n  * **filePath** - path to a file or an URL if you want to stream the file instead of including it (better for larger attachments)\n  * **streamSource** - Stream object for arbitrary binary streams if you want to stream the contents (needs to support *pause*/*resume*)\n  * **contentType** - content type for the attachment, if not set will be derived from the `fileName` property\n  * **contentDisposition** - content disposition type for the attachment, defaults to "attachment"\n  * **userAgent** - User-Agent string to be used if the fileName points to an URL\n\nOne of `contents`, `filePath` or `streamSource` must be specified, if none is\npresent, the attachment will be discarded. Other fields are optional.\n\nAttachments can be added as many as you want.\n\n**Using embedded images in HTML**\n\nAttachments can be used as embedded images in the HTML body. To use this\nfeature, you need to set additional property of the attachment - `cid`\n(unique identifier of the file) which is a reference to the attachment file.\nThe same `cid` value must be used as the image URL in HTML (using `cid:` as\nthe URL protocol, see example below).\n\nNB! the cid value should be as unique as possible!\n\n```javascript\nvar cid_value = Date.now() + \'.image.jpg\';\n\nvar html = \'Embedded image: <img src="cid:\' + cid_value + \'" />\';\n\nvar attachment = {\n    fileName: "image.png",\n    filePath: "/static/images/image.png",\n    cid: cid_value\n};\n```\n\n**Automatic embedding images**\n\nIf you want to convert images in the HTML to embedded images automatically, you can\nset mailcomposer option `forceEmbeddedImages` to true. In this case all images in\nthe HTML that are either using an absolute URL (http://...) or absolute file path\n(/path/to/file) are replaced with embedded attachments.\n\nFor example when using this code\n\n```javascript\nvar mailcomposer = new MailComposer({forceEmbeddedImages: true});\nmailcomposer.setMessageOption({\n    html: \'Embedded image: <img src="http://example.com/image.png">\'\n});\n```\n\nThe image linked is fetched and added automatically as an attachment and the url\nin the HTML is replaced automatically with a proper `cid:` string.\n\n### Add alternatives to HTML and text\n\nIn addition to text and HTML, any kind of data can be inserted as an alternative content of the main body - for example a word processing document with the same text as in the HTML field. It is the job of the e-mail client to select and show the best fitting alternative to the reader.\n\nAlternatives to text and HTML can be added with `mailcomposer.addAlternative(alternative)` where\n`alternative` is an object with alternative (meta)data with the following possible\nproperties:\n\n  * **contents** - String or a Buffer contents for the attachment\n  * **contentType** - optional content type for the attachment, if not set will be set to "application/octet-stream"\n  * **contentEncoding** - optional value of how the data is encoded, defaults to "base64"\n\nIf `contents` is empty, the alternative will be discarded. Other fields are optional.\n\n**Usage example:**\n\n```javascript\n// add HTML "alternative"\nmailcomposer.setMessageOption({\n    html: "<b>Hello world!</b>"\n});\n\n// add Markdown alternative\nmailcomposer.addAlternative({\n    contentType: "text/x-web-markdown",\n    contents: "**Hello world!**"\n});\n```\n\nIf the receiving e-mail client can render messages in Markdown syntax as well, it could prefer\nto display this alternative as the main content of the message.\n\nAlternatives can be added as many as you want.\n\n### DKIM Signing\n\n**mailcomposer** supports DKIM signing with very simple setup. Use this with caution\nthough since the generated message needs to be buffered entirely before it can be\nsigned - in this case the streaming capability offered by mailcomposer is illusionary,\nthere will only be one `\'data\'` event with the entire message. Not a big deal with\nsmall messages but might consume a lot of RAM when using larger attachments.\n\nSet up the DKIM signing with `useDKIM` method:\n\n```javascript\nmailcomposer.useDKIM(dkimOptions)\n```\n\nWhere `dkimOptions` includes necessary options for signing\n\n  * **domainName** - the domainname that is being used for signing\n  * **keySelector** - key selector. If you have set up a TXT record with DKIM public key at *zzz._domainkey.example.com* then `zzz` is the selector\n  * **privateKey** - DKIM private key that is used for signing as a string\n  * **headerFieldNames** - optional colon separated list of header fields to sign, by default all fields suggested by RFC4871 #5.5 are used\n\n**NB!** Currently if several header fields with the same name exists, only the last one (the one in the bottom) is signed.\n\nExample:\n\n```javascript\nmailcomposer.setMessageOption({from: "andris@tr.ee"});\nmailcomposer.setMessageOption({to: "andris@node.ee"});\nmailcomposer.setMessageOption({body: "Hello world!"});\nmailcomposer.useDKIM({\n    domainName: "node.ee",\n    keySelector: "dkim",\n    privateKey: fs.readFileSync("private_key.pem")\n});\n```\n\n### Start streaming\n\nWhen the message data is setup, streaming can be started. After this it is not\npossible to add headers, attachments or change body contents.\n\n```javascript\nmailcomposer.streamMessage();\n```\n\nThis generates `\'data\'` events for the message headers and body and final `\'end\'` event.\nAs `MailComposer` objects are Stream instances, these can be piped\n\n```javascript\n// save the output to a file\nmailcomposer.streamMessage();\nmailcomposer.pipe(fs.createWriteStream("out.txt"));\n```\n\n### Compile the message in one go\n\nIf you do not want to use the streaming possibilities, you can compile the entire\nmessage into a string in one go with `buildMessage`.\n\n```javascript\nmailcomposer.buildMessage(function(err, messageSource){\n    console.log(err || messageSource);\n});\n```\n\nThe function is actually just a wrapper around `streamMessage` and emitted events.\n\n## Envelope\n\nEnvelope can be generated with an `getEnvelope()` which returns an object\nthat includes a `from` address (string) and a list of `to` addresses (array of\nstrings) suitable for forwarding to a SMTP server as `MAIL FROM:` and `RCPT TO:`.\n\n```javascript\nconsole.log(mailcomposer.getEnvelope());\n// {from:"sender@example.com", to:["receiver@example.com"]}\n```\n\n**NB!** both `from` and `to` properties might be missing from the envelope object\nif corresponding addresses were not detected from the e-mail.\n\n## Running tests\n\nTests are run with [nodeunit](https://github.com/caolan/nodeunit)\n\nRun\n\n    npm test\n\n## License\n\n**MIT**\n',
301 silly resolved     readmeFilename: 'README.md',
301 silly resolved     bugs: { url: 'https://github.com/andris9/mailcomposer/issues' },
301 silly resolved     homepage: 'https://github.com/andris9/mailcomposer',
301 silly resolved     _id: 'mailcomposer@0.2.8',
301 silly resolved     _from: 'mailcomposer@~0.2.7' },
301 silly resolved   { name: 'simplesmtp',
301 silly resolved     description: 'Simple SMTP server module to create custom SMTP servers',
301 silly resolved     version: '0.3.22',
301 silly resolved     author: { name: 'Andris Reinman' },
301 silly resolved     maintainers: [ [Object] ],
301 silly resolved     repository: { type: 'git', url: 'http://github.com/andris9/simplesmtp.git' },
301 silly resolved     scripts: { test: 'nodeunit test/' },
301 silly resolved     main: './lib/smtp',
301 silly resolved     licenses: [ [Object] ],
301 silly resolved     dependencies: { rai: '~0.1', xoauth2: '~0.1' },
301 silly resolved     devDependencies: { nodeunit: '*', mailcomposer: '*' },
301 silly resolved     engines: { node: '>=0.8.0' },
301 silly resolved     keywords: [ 'servers', 'text-based', 'smtp', 'email', 'mail', 'e-mail' ],
301 silly resolved     readme: '# simplesmtp\n\nThis is a module to easily create custom SMTP servers and clients - use SMTP as a first class protocol in Node.JS!\n\n[![Build Status](https://secure.travis-ci.org/andris9/simplesmtp.png)](http://travis-ci.org/andris9/simplesmtp)\n[![NPM version](https://badge.fury.io/js/simplesmtp.png)](http://badge.fury.io/js/simplesmtp)\n\n## Version warning!\n\nIf you are using node v0.6, then the last usable version of **simplesmtp** is v0.2.7\n\nCurrent version of simplesmtp is fully supported for Node v0.8+\n\n## Support simplesmtp development\n\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\n## SMTP Server\n\n## Simple SMTP server\n\nFor a simple inbound only, no authentication SMTP server you can use\n\n    simplesmtp.createSimpleServer([options], requestListener).listen(port);\n\nExample\n\n    simplesmtp.createSimpleServer({SMTPBanner:"My Server"}, function(req){\n        req.pipe(process.stdout);\n        req.accept();\n    }).listen(port);\n\nProperties\n\n  * **req.from** - From address\n  * **req.to** - an array of To addresses\n  * **req.host** - hostname reported by the client\n  * **req.remodeAddress** - client IP address\n\nMethods\n\n  * **req.accept** *([id])* - Accept the message with the selected ID\n  * **req.reject** *([message])* - Reject the message with the selected message\n  * **req.pipe** *(stream)* - Pipe the incoming data to a writable stream\n\nEvents\n\n  * **\'data\'** *(chunk)* - A chunk (Buffer) of the message.\n  * **\'end\'** - The message has been transferred\n\n\n## Advanced SMTP server\n\n### Usage\n\nCreate a new SMTP server instance with\n\n    var smtp = simplesmtp.createServer([options]);\n\nAnd start listening on selected port\n\n    smtp.listen(25, [function(err){}]);\n\nSMTP options can include the following:\n\n  * **name** - the hostname of the server, will be used for informational messages\n  * **debug** - if set to true, print out messages about the connection\n  * **timeout** - client timeout in milliseconds, defaults to 60 000 (60 sec.)\n  * **secureConnection** - start a server on secure connection\n  * **SMTPBanner** - greeting banner that is sent to the client on connection\n  * **requireAuthentication** - if set to true, require that the client must authenticate itself\n  * **enableAuthentication** - if set to true, client may authenticate itself but don\'t have to (as opposed to `requireAuthentication` that explicitly requires clients to authenticate themselves)\n  * **maxSize** - maximum size of an e-mail in bytes (currently informational only)\n  * **credentials** - TLS credentials (`{key:\'\', cert:\'\', ca:[\'\']}`) for the server\n  * **authMethods** - allowed authentication methods, defaults to `["PLAIN", "LOGIN"]`\n  * **disableEHLO** - if set to true, support HELO command only\n  * **ignoreTLS** - if set to true, allow client do not use STARTTLS\n  * **disableDNSValidation** - if set, do not validate sender domains\n\n### Example\n\n    var simplesmtp = require("simplesmtp"),\n        fs = require("fs");\n\n    var smtp = simplesmtp.createServer();\n    smtp.listen(25);\n\n    smtp.on("startData", function(connection){\n        console.log("Message from:", connection.from);\n        console.log("Message to:", connection.to);\n        connection.saveStream = fs.createWriteStream("/tmp/message.txt");\n    });\n\n    smtp.on("data", function(connection, chunk){\n        connection.saveStream.write(chunk);\n    });\n\n    smtp.on("dataReady", function(connection, callback){\n        connection.saveStream.end();\n        console.log("Incoming message saved to /tmp/message.txt");\n        callback(null, "ABC1"); // ABC1 is the queue id to be advertised to the client\n        // callback(new Error("Rejected as spam!")); // reported back to the client\n    });\n\n### Events\n\n  * **startData** *(connection)* - DATA stream is opened by the client (`connection` is an object with `from`, `to`, `host` and `remoteAddress` properties)\n  * **data** *(connection, chunk)* - e-mail data chunk is passed from the client\n  * **dataReady** *(connection, callback)* - client is finished passing e-mail data, `callback` returns the queue id to the client\n  * **authorizeUser** *(connection, username, password, callback)* - will be emitted if `requireAuthentication` option is set to true. `callback` has two parameters *(err, success)* where `success` is Boolean and should be true, if user is authenticated successfully\n  * **validateSender** *(connection, email, callback)* - will be emitted if `validateSender` listener is set up\n  * **validateRecipient** *(connection, email, callback)* - will be emitted it `validataRecipients` listener is set up\n  * **close** *(connection)* - emitted when the connection to client is closed\n\n## SMTP Client\n\n### Usage\n\nSMTP client can be created with `simplesmtp.connect(port[,host][, options])`\nwhere\n\n  * **port** is the port to connect to\n  * **host** is the hostname to connect to (defaults to "localhost")\n  * **options** is an optional options object (see below)\n\n### Connection options\n\nThe following connection options can be used with `simplesmtp.connect`:\n\n  * **secureConnection** - use SSL\n  * **name** - the name of the client server\n  * **auth** - authentication object `{user:"...", pass:"..."}` or `{XOAuthToken:"base64data"}`\n  * **ignoreTLS** - ignore server support for STARTTLS\n  * **tls** - optional options object for `tls.connect`, also applies to STARTTLS. For example `rejectUnauthorized` is set to `false` by default. You can override this option by setting `tls: {rejectUnauthorized: true}`\n  * **debug** - output client and server messages to console\n  * **logFile** - optional filename where communication with remote server has to be logged\n  * **instanceId** - unique instance id for debugging (will be output console with the messages)\n  * **localAddress** - local interface to bind to for network connections (needs Node.js >= 0.11.3 for working with tls)\n  * **greetingTimeout** (defaults to 10000) - Time to wait in ms until greeting message is received from the server\n  * **connectionTimeout** (system default if not set) - Time to wait in ms until the socket is opened to the server\n  * **rejectUnathorized** (defaults to false) - if set to true accepts only valid server certificates. You can override this option with the `tls` option, this is just a shorthand\n  * **dsn** - An object with methods `success`, `failure` and `delay`. If any of these are set to true, DSN will be used\n\n### Connection events\n\nOnce a connection is set up the following events can be listened to:\n\n  * **\'idle\'** - the connection to the SMTP server has been successfully set up and the client is waiting for an envelope\n  * **\'message\'** - the envelope is passed successfully to the server and a message stream can be started\n  * **\'ready\'** `(success)` - the message was sent\n  * **\'rcptFailed\'** `(addresses)` - not all recipients were accepted (invalid addresses are included as an array)\n  * **\'error\'** `(err, stage)` - An error occurred. The connection is closed and an \'end\' event is emitted shortly. Second argument indicates on which SMTP session stage an error occured.\n  * **\'end\'** - connection to the client is closed\n\n### Sending an envelope\n\nWhen an `\'idle\'` event is emitted, an envelope object can be sent to the server.\nThis includes a string `from` and an array of strings `to` property.\n\nEnvelope can be sent with `client.useEnvelope(envelope)`\n\n    // run only once as \'idle\' is emitted again after message delivery\n    client.once("idle", function(){\n        client.useEnvelope({\n            from: "me@example.com",\n            to: ["receiver1@example.com", "receiver2@example.com"]\n        });\n    });\n\nThe `to` part of the envelope includes **all** recipients from `To:`, `Cc:` and `Bcc:` fields.\n\nIf setting the envelope up fails, an error is emitted. If only some (not all)\nrecipients are not accepted, the mail can still be sent but an `rcptFailed`\nevent is emitted.\n\n    client.on("rcptFailed", function(addresses){\n        console.log("The following addresses were rejected: ", addresses);\n    });\n\nIf the envelope is set up correctly a `\'message\'` event is emitted.\n\n### Sending a message\n\nWhen `\'message\'` event is emitted, it is possible to send mail. To do this\nyou can pipe directly a message source (for example an .eml file) to the client\nor alternatively you can send the message with `client.write` calls (you also\nneed to call `client.end()` once the message is completed.\n\nIf you are piping a stream to the client, do not leave the `\'end\'` event out,\nthis is needed to complete the message sequence by the client.\n\n    client.on("message", function(){\n        fs.createReadStream("test.eml").pipe(client);\n    });\n\nOnce the message is delivered a `\'ready\'` event is emitted. The event has an\nparameter which indicates if the message was transmitted( (true) or not (false)\nand another which includes the last received data from the server.\n\n    client.on("ready", function(success, response){\n        if(success){\n            console.log("The message was transmitted successfully with "+response);\n        }\n    });\n\n### XOAUTH\n\n**simplesmtp** supports [XOAUTH2 and XOAUTH](https://developers.google.com/google-apps/gmail/oauth_protocol) authentication.\n\n#### XOAUTH2\n\nTo use this feature you can set `XOAuth2` param as an `auth` option\n\n    var mailOptions = {\n        ...,\n        auth:{\n            XOAuth2: {\n                user: "example.user@gmail.com",\n                clientId: "8819981768.apps.googleusercontent.com",\n                clientSecret: "{client_secret}",\n                refreshToken: "1/xEoDL4iW3cxlI7yDbSRFYNG01kVKM2C-259HOF2aQbI",\n                accessToken: "vF9dft4qmTc2Nvb3RlckBhdHRhdmlzdGEuY29tCg==",\n                timeout: 3600\n            }\n        }\n    }\n\n`accessToken` and `timeout` values are optional. If login fails a new access token is generated automatically.\n\n#### XOAUTH\n\nTo use this feature you can set `XOAuthToken` param as an `auth` option\n\n    var mailOptions = {\n        ...,\n        auth:{\n            XOAuthToken: "R0VUIGh0dHBzOi8vbWFpbC5nb29...."\n        }\n    }\n\nAlternatively it is also possible to use XOAuthToken generators (supported by Nodemailer) - this\nneeds to be an object with a mandatory method `generate` that takes a callback function for\ngenerating a XOAUTH token string. This is better for generating tokens only when needed -\nthere is no need to calculate unique token for every e-mail request, since a lot of these\nmight share the same connection and thus the cleint needs not to re-authenticate itself\nwith another token.\n\n    var XOGen = {\n        token: "abc",\n        generate: function(callback){\n            if(1 != 1){\n                return callback(new Error("Tokens can\'t be generated in strange environments"));\n            }\n            callback(null, new Buffer(this.token, "utf-8").toString("base64"));\n        }\n    }\n\n    var mailOptions = {\n        ...,\n        auth:{\n            XOAuthToken: XOGen\n        }\n    }\n\n### Error types\n\nEmitted errors include the reason for failing in the `name` property\n\n  * **UnknowAuthError** - the client tried to authenticate but the method was not supported\n  * **AuthError** - the username/password used were rejected\n  * **TLSError** - STARTTLS failed\n  * **SenderError** - the sender e-mail address was rejected\n  * **RecipientError** - all recipients were rejected (if only some of the recipients are rejected, a `\'rcptFailed\'` event is raised instead\n\nThere\'s also an additional property in the error object called `data` that includes\nthe last response received from the server (if available for the current error type).\n\n### About reusing the connection\n\nYou can reuse the same connection several times but you can\'t send a mail\nthrough the same connection concurrently. So if you catch and `\'idle\'` event\nlock the connection to a message process and unlock after `\'ready\'`.\n\nOn `\'error\'` events you should reschedule the message and on `\'end\'` events\nyou should recreate the connection.\n\n### Closing the client\n\nBy default the client tries to keep the connection up. If you want to close it,\nrun `client.quit()` - this sends a `QUIT` command to the server and closes the\nconnection\n\n    client.quit();\n\n## SMTP Client Connection pool\n\n**simplesmtp** has the option for connection pooling if you want to reuse a bulk\nof connections.\n\n### Usage\n\nCreate a connection pool of SMTP clients with\n\n    simplesmtp.createClientPool(port[,host][, options])\n\nwhere\n\n  * **port** is the port to connect to\n  * **host** is the hostname to connect to (defaults to "localhost")\n  * **options** is an optional options object (see below)\n\n### Connection options\n\nThe following connection options can be used with `simplesmtp.connect`:\n\n  * **secureConnection** - use SSL\n  * **name** - the name of the client server\n  * **auth** - authentication object `{user:"...", pass:"..."}` or  `{XOAuthToken:"base64data"}`\n  * **ignoreTLS** - ignore server support for STARTTLS\n  * **debug** - output client and server messages to console\n  * **logFile** - optional filename where communication with remote server has to be logged\n  * **maxConnections** - how many connections to keep in the pool (defaults to 5)\n  * **localAddress** - local interface to bind to for network connections (needs Node.js >= 0.11.3 for working with tls)\n  * **maxMessages** - limit the count of messages to send through a single connection (no limit by default)\n\n### Send an e-mail\n\nE-mails can be sent through the pool with\n\n    pool.sendMail(mail[, callback])\n\nwhere\n\n  * **mail** is a [MailComposer](https://github.com/andris9/mailcomposer) compatible object\n  * **callback** `(error, responseObj)` - is the callback function to run after the message is delivered or an error occured. `responseObj` may include `failedRecipients` which is an array with e-mail addresses that were rejected and `message` which is the last response from the server.\n\n### Errors\n\nIn addition to SMTP client errors another error name is used\n\n  * **DeliveryError** - used if the message was not accepted by the SMTP server\n\n## License\n\n**MIT**\n\n',
301 silly resolved     readmeFilename: 'README.md',
301 silly resolved     bugs: { url: 'https://github.com/andris9/simplesmtp/issues' },
301 silly resolved     homepage: 'https://github.com/andris9/simplesmtp',
301 silly resolved     _id: 'simplesmtp@0.3.22',
301 silly resolved     _from: 'simplesmtp@~0.2 || ~0.3' } ]
302 info install directmail@0.1.6 into /home/vagrant/taskitafinal/node_modules/nodemailer
303 info install readable-stream@1.1.11 into /home/vagrant/taskitafinal/node_modules/nodemailer
304 info install he@0.3.6 into /home/vagrant/taskitafinal/node_modules/nodemailer
305 info install public-address@0.1.0 into /home/vagrant/taskitafinal/node_modules/nodemailer
306 info install mailcomposer@0.2.8 into /home/vagrant/taskitafinal/node_modules/nodemailer
307 info install simplesmtp@0.3.22 into /home/vagrant/taskitafinal/node_modules/nodemailer
308 info installOne directmail@0.1.6
309 info installOne readable-stream@1.1.11
310 info installOne he@0.3.6
311 info installOne public-address@0.1.0
312 info installOne mailcomposer@0.2.8
313 info installOne simplesmtp@0.3.22
314 info /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/directmail unbuild
315 info /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/readable-stream unbuild
316 info /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/he unbuild
317 info /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/mailcomposer unbuild
318 info /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/public-address unbuild
319 info /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/simplesmtp unbuild
320 verbose tar unpack /home/vagrant/.npm/directmail/0.1.6/package.tgz
321 silly lockFile fc7c15cc-demailer-node-modules-directmail tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/directmail
322 verbose lock tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/directmail /home/vagrant/.npm/fc7c15cc-demailer-node-modules-directmail.lock
323 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
324 verbose lock tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz /home/vagrant/.npm/7e2fda72-npm-directmail-0-1-6-package-tgz.lock
325 verbose tar unpack /home/vagrant/.npm/readable-stream/1.1.11/package.tgz
326 silly lockFile 6b928c31-ler-node-modules-readable-stream tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/readable-stream
327 verbose lock tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/readable-stream /home/vagrant/.npm/6b928c31-ler-node-modules-readable-stream.lock
328 silly lockFile 609d2f51-adable-stream-1-1-11-package-tgz tar:///home/vagrant/.npm/readable-stream/1.1.11/package.tgz
329 verbose lock tar:///home/vagrant/.npm/readable-stream/1.1.11/package.tgz /home/vagrant/.npm/609d2f51-adable-stream-1-1-11-package-tgz.lock
330 verbose tar unpack /home/vagrant/.npm/he/0.3.6/package.tgz
331 silly lockFile e1807ff2-dules-nodemailer-node-modules-he tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/he
332 verbose lock tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/he /home/vagrant/.npm/e1807ff2-dules-nodemailer-node-modules-he.lock
333 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
334 verbose lock tar:///home/vagrant/.npm/he/0.3.6/package.tgz /home/vagrant/.npm/5068ace3-vagrant-npm-he-0-3-6-package-tgz.lock
335 verbose tar unpack /home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
336 silly lockFile a89409b9-mailer-node-modules-mailcomposer tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/mailcomposer
337 verbose lock tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/mailcomposer /home/vagrant/.npm/a89409b9-mailer-node-modules-mailcomposer.lock
338 silly lockFile 0087c768-m-mailcomposer-0-2-8-package-tgz tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz
339 verbose lock tar:///home/vagrant/.npm/mailcomposer/0.2.8/package.tgz /home/vagrant/.npm/0087c768-m-mailcomposer-0-2-8-package-tgz.lock
340 verbose tar unpack /home/vagrant/.npm/public-address/0.1.0/package.tgz
341 silly lockFile 0df91fc5-iler-node-modules-public-address tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/public-address
342 verbose lock tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/public-address /home/vagrant/.npm/0df91fc5-iler-node-modules-public-address.lock
343 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
344 verbose lock tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz /home/vagrant/.npm/3cdb4709-public-address-0-1-0-package-tgz.lock
345 verbose tar unpack /home/vagrant/.npm/simplesmtp/0.3.22/package.tgz
346 silly lockFile 81c1af09-demailer-node-modules-simplesmtp tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/simplesmtp
347 verbose lock tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/simplesmtp /home/vagrant/.npm/81c1af09-demailer-node-modules-simplesmtp.lock
348 silly lockFile d7010483-pm-simplesmtp-0-3-22-package-tgz tar:///home/vagrant/.npm/simplesmtp/0.3.22/package.tgz
349 verbose lock tar:///home/vagrant/.npm/simplesmtp/0.3.22/package.tgz /home/vagrant/.npm/d7010483-pm-simplesmtp-0-3-22-package-tgz.lock
350 silly gunzTarPerm modes [ '755', '644' ]
351 silly gunzTarPerm modes [ '755', '644' ]
352 silly gunzTarPerm modes [ '755', '644' ]
353 silly gunzTarPerm modes [ '755', '644' ]
354 silly gunzTarPerm modes [ '755', '644' ]
355 silly gunzTarPerm modes [ '755', '644' ]
356 silly gunzTarPerm extractEntry package.json
357 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
358 silly gunzTarPerm extractEntry package.json
359 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
360 silly gunzTarPerm extractEntry package.json
361 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
362 silly gunzTarPerm extractEntry package.json
363 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
364 silly gunzTarPerm extractEntry package.json
365 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
366 silly gunzTarPerm extractEntry package.json
367 silly gunzTarPerm modified mode [ 'package.json', 384, 420 ]
368 silly gunzTarPerm extractEntry README.md
369 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
370 silly gunzTarPerm extractEntry LICENSE
371 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
372 silly gunzTarPerm extractEntry .npmignore
373 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
374 silly gunzTarPerm extractEntry README.md
375 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
376 silly gunzTarPerm extractEntry README.md
377 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
378 silly gunzTarPerm extractEntry index.js
379 silly gunzTarPerm modified mode [ 'index.js', 384, 420 ]
380 silly gunzTarPerm extractEntry README.md
381 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
382 silly gunzTarPerm extractEntry he.js
383 silly gunzTarPerm modified mode [ 'he.js', 384, 420 ]
384 silly gunzTarPerm extractEntry .npmignore
385 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
386 silly gunzTarPerm extractEntry README.md
387 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
388 silly gunzTarPerm extractEntry .npmignore
389 silly gunzTarPerm modified mode [ '.npmignore', 384, 420 ]
390 silly gunzTarPerm extractEntry README.md
391 silly gunzTarPerm modified mode [ 'README.md', 384, 420 ]
392 silly gunzTarPerm extractEntry index.js
393 silly gunzTarPerm modified mode [ 'index.js', 384, 420 ]
394 silly gunzTarPerm extractEntry .travis.yml
395 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
396 silly gunzTarPerm extractEntry LICENSE
397 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
398 silly gunzTarPerm extractEntry duplex.js
399 silly gunzTarPerm modified mode [ 'duplex.js', 384, 420 ]
400 silly gunzTarPerm extractEntry tests/public-address.js
401 silly gunzTarPerm modified mode [ 'tests/public-address.js', 384, 420 ]
402 silly gunzTarPerm extractEntry LICENSE
403 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
404 silly gunzTarPerm extractEntry LICENSE-MIT.txt
405 silly gunzTarPerm modified mode [ 'LICENSE-MIT.txt', 384, 420 ]
406 silly gunzTarPerm extractEntry LICENSE
407 silly gunzTarPerm modified mode [ 'LICENSE', 384, 420 ]
408 silly gunzTarPerm extractEntry transform.js
409 silly gunzTarPerm modified mode [ 'transform.js', 384, 420 ]
410 silly gunzTarPerm extractEntry passthrough.js
411 silly gunzTarPerm modified mode [ 'passthrough.js', 384, 420 ]
412 silly gunzTarPerm extractEntry .travis.yml
413 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
414 silly gunzTarPerm extractEntry lib/mailcomposer.js
415 silly gunzTarPerm modified mode [ 'lib/mailcomposer.js', 384, 420 ]
416 silly gunzTarPerm extractEntry index.js
417 silly gunzTarPerm modified mode [ 'index.js', 384, 420 ]
418 silly gunzTarPerm extractEntry .travis.yml
419 silly gunzTarPerm modified mode [ '.travis.yml', 384, 420 ]
420 silly gunzTarPerm extractEntry lib/mailer.js
421 silly gunzTarPerm modified mode [ 'lib/mailer.js', 384, 420 ]
422 silly gunzTarPerm extractEntry lib/queue.js
423 silly gunzTarPerm modified mode [ 'lib/queue.js', 384, 420 ]
424 silly gunzTarPerm extractEntry tests/mailer.js
425 silly gunzTarPerm modified mode [ 'tests/mailer.js', 384, 420 ]
426 silly gunzTarPerm extractEntry tests/queue.js
427 silly gunzTarPerm modified mode [ 'tests/queue.js', 384, 420 ]
428 silly gunzTarPerm extractEntry readable.js
429 silly gunzTarPerm modified mode [ 'readable.js', 384, 420 ]
430 silly gunzTarPerm extractEntry writable.js
431 silly gunzTarPerm modified mode [ 'writable.js', 384, 420 ]
432 silly gunzTarPerm extractEntry bin/he
433 silly gunzTarPerm modified mode [ 'bin/he', 384, 420 ]
434 silly gunzTarPerm extractEntry man/he.1
435 silly gunzTarPerm modified mode [ 'man/he.1', 384, 420 ]
436 silly gunzTarPerm extractEntry float.patch
437 silly gunzTarPerm modified mode [ 'float.patch', 384, 420 ]
438 silly gunzTarPerm extractEntry lib/_stream_duplex.js
439 silly gunzTarPerm modified mode [ 'lib/_stream_duplex.js', 384, 420 ]
440 silly gunzTarPerm extractEntry lib/_stream_passthrough.js
441 silly gunzTarPerm modified mode [ 'lib/_stream_passthrough.js', 384, 420 ]
442 silly gunzTarPerm extractEntry lib/_stream_readable.js
443 silly gunzTarPerm modified mode [ 'lib/_stream_readable.js', 384, 420 ]
444 silly gunzTarPerm extractEntry lib/_stream_transform.js
445 silly gunzTarPerm modified mode [ 'lib/_stream_transform.js', 384, 420 ]
446 silly gunzTarPerm extractEntry lib/_stream_writable.js
447 silly gunzTarPerm modified mode [ 'lib/_stream_writable.js', 384, 420 ]
448 silly gunzTarPerm extractEntry lib/topunycode.js
449 silly gunzTarPerm modified mode [ 'lib/topunycode.js', 384, 420 ]
450 silly gunzTarPerm extractEntry lib/urlfetch.js
451 silly gunzTarPerm modified mode [ 'lib/urlfetch.js', 384, 420 ]
452 silly gunzTarPerm extractEntry CHANGELOG.md
453 silly gunzTarPerm modified mode [ 'CHANGELOG.md', 384, 420 ]
454 silly gunzTarPerm extractEntry examples/simpleserver.js
455 silly gunzTarPerm modified mode [ 'examples/simpleserver.js', 384, 420 ]
456 silly lockFile 0df91fc5-iler-node-modules-public-address tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/public-address
457 silly lockFile 0df91fc5-iler-node-modules-public-address tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/public-address
458 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
459 silly lockFile 3cdb4709-public-address-0-1-0-package-tgz tar:///home/vagrant/.npm/public-address/0.1.0/package.tgz
460 info preinstall public-address@0.1.0
461 silly gunzTarPerm extractEntry test/mailcomposer.js
462 silly gunzTarPerm modified mode [ 'test/mailcomposer.js', 384, 420 ]
463 silly gunzTarPerm extractEntry test/image3.png
464 silly gunzTarPerm modified mode [ 'test/image3.png', 384, 420 ]
465 silly gunzTarPerm extractEntry examples/size.js
466 silly gunzTarPerm modified mode [ 'examples/size.js', 384, 420 ]
467 silly gunzTarPerm extractEntry examples/validate-recipient.js
468 silly gunzTarPerm modified mode [ 'examples/validate-recipient.js', 384, 420 ]
469 verbose readDependencies using package.json deps
470 verbose readDependencies using package.json deps
471 silly resolved []
472 verbose about to build /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/public-address
473 info build /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/public-address
474 verbose linkStuff [ false,
474 verbose linkStuff   false,
474 verbose linkStuff   false,
474 verbose linkStuff   '/home/vagrant/taskitafinal/node_modules/nodemailer/node_modules' ]
475 info linkStuff public-address@0.1.0
476 verbose linkBins public-address@0.1.0
477 verbose linkMans public-address@0.1.0
478 verbose rebuildBundles public-address@0.1.0
479 info install public-address@0.1.0
480 info postinstall public-address@0.1.0
481 silly gunzTarPerm extractEntry test/test_private.pem
482 silly gunzTarPerm modified mode [ 'test/test_private.pem', 384, 420 ]
483 silly gunzTarPerm extractEntry test/textfile.txt
484 silly gunzTarPerm modified mode [ 'test/textfile.txt', 384, 420 ]
485 silly gunzTarPerm extractEntry lib/client.js
486 silly gunzTarPerm modified mode [ 'lib/client.js', 384, 420 ]
487 silly gunzTarPerm extractEntry lib/pool.js
488 silly gunzTarPerm modified mode [ 'lib/pool.js', 384, 420 ]
489 silly gunzTarPerm extractEntry lib/server.js
490 silly gunzTarPerm modified mode [ 'lib/server.js', 384, 420 ]
491 silly gunzTarPerm extractEntry lib/simpleserver.js
492 silly gunzTarPerm modified mode [ 'lib/simpleserver.js', 384, 420 ]
493 silly gunzTarPerm extractEntry test/client.js
494 silly gunzTarPerm modified mode [ 'test/client.js', 384, 420 ]
495 silly gunzTarPerm extractEntry test/pool.js
496 silly gunzTarPerm modified mode [ 'test/pool.js', 384, 420 ]
497 silly gunzTarPerm extractEntry test/server.js
498 silly gunzTarPerm modified mode [ 'test/server.js', 384, 420 ]
499 silly gunzTarPerm extractEntry test/testmessage.eml
500 silly gunzTarPerm modified mode [ 'test/testmessage.eml', 384, 420 ]
501 silly lockFile fc7c15cc-demailer-node-modules-directmail tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/directmail
502 silly lockFile fc7c15cc-demailer-node-modules-directmail tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/directmail
503 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
504 silly lockFile 7e2fda72-npm-directmail-0-1-6-package-tgz tar:///home/vagrant/.npm/directmail/0.1.6/package.tgz
505 info preinstall directmail@0.1.6
506 verbose readDependencies using package.json deps
507 verbose readDependencies using package.json deps
508 silly resolved []
509 verbose about to build /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/directmail
510 info build /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/directmail
511 verbose linkStuff [ false,
511 verbose linkStuff   false,
511 verbose linkStuff   false,
511 verbose linkStuff   '/home/vagrant/taskitafinal/node_modules/nodemailer/node_modules' ]
512 info linkStuff directmail@0.1.6
513 verbose linkBins directmail@0.1.6
514 verbose linkMans directmail@0.1.6
515 verbose rebuildBundles directmail@0.1.6
516 info install directmail@0.1.6
517 info postinstall directmail@0.1.6
518 silly lockFile e1807ff2-dules-nodemailer-node-modules-he tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/he
519 silly lockFile e1807ff2-dules-nodemailer-node-modules-he tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/he
520 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
521 silly lockFile 5068ace3-vagrant-npm-he-0-3-6-package-tgz tar:///home/vagrant/.npm/he/0.3.6/package.tgz
522 info preinstall he@0.3.6
523 verbose readDependencies using package.json deps
524 verbose readDependencies using package.json deps
525 silly resolved []
526 verbose about to build /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/he
527 info build /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/he
528 verbose linkStuff [ false,
528 verbose linkStuff   false,
528 verbose linkStuff   false,
528 verbose linkStuff   '/home/vagrant/taskitafinal/node_modules/nodemailer/node_modules' ]
529 info linkStuff he@0.3.6
530 verbose linkBins he@0.3.6
531 verbose link bins [ { he: 'bin/he' },
531 verbose link bins   '/home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/.bin',
531 verbose link bins   false ]
532 verbose linkMans he@0.3.6
533 verbose rebuildBundles he@0.3.6
534 info /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/he unbuild
535 info preuninstall he@0.3.6
536 info uninstall he@0.3.6
537 verbose false,/home/vagrant/taskitafinal/node_modules,/home/vagrant/taskitafinal/node_modules/nodemailer/node_modules unbuild he@0.3.6
538 verbose /home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/.bin,[object Object] binRoot
539 info postuninstall he@0.3.6
540 verbose about to build /home/vagrant/taskitafinal/node_modules/nodemailer
541 info /home/vagrant/taskitafinal/node_modules/nodemailer unbuild
542 info preuninstall nodemailer@0.6.1
543 silly lockFile 6b928c31-ler-node-modules-readable-stream tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/readable-stream
544 silly lockFile 6b928c31-ler-node-modules-readable-stream tar:///home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/readable-stream
545 silly lockFile 609d2f51-adable-stream-1-1-11-package-tgz tar:///home/vagrant/.npm/readable-stream/1.1.11/package.tgz
546 silly lockFile 609d2f51-adable-stream-1-1-11-package-tgz tar:///home/vagrant/.npm/readable-stream/1.1.11/package.tgz
547 info uninstall nodemailer@0.6.1
548 verbose true,/home/vagrant/taskitafinal/node_modules,/home/vagrant/taskitafinal/node_modules unbuild nodemailer@0.6.1
549 info postuninstall nodemailer@0.6.1
550 info preinstall readable-stream@1.1.11
551 verbose readDependencies using package.json deps
552 verbose readDependencies using package.json deps
553 verbose cache add [ 'debuglog@0.0.2', null ]
554 verbose cache add name=undefined spec="debuglog@0.0.2" args=["debuglog@0.0.2",null]
555 verbose parsed url { protocol: null,
555 verbose parsed url   slashes: null,
555 verbose parsed url   auth: null,
555 verbose parsed url   host: null,
555 verbose parsed url   port: null,
555 verbose parsed url   hostname: null,
555 verbose parsed url   hash: null,
555 verbose parsed url   search: null,
555 verbose parsed url   query: null,
555 verbose parsed url   pathname: 'debuglog@0.0.2',
555 verbose parsed url   path: 'debuglog@0.0.2',
555 verbose parsed url   href: 'debuglog@0.0.2' }
556 verbose cache add name="debuglog" spec="0.0.2" args=["debuglog","0.0.2"]
557 verbose parsed url { protocol: null,
557 verbose parsed url   slashes: null,
557 verbose parsed url   auth: null,
557 verbose parsed url   host: null,
557 verbose parsed url   port: null,
557 verbose parsed url   hostname: null,
557 verbose parsed url   hash: null,
557 verbose parsed url   search: null,
557 verbose parsed url   query: null,
557 verbose parsed url   pathname: '0.0.2',
557 verbose parsed url   path: '0.0.2',
557 verbose parsed url   href: '0.0.2' }
558 verbose addNamed [ 'debuglog', '0.0.2' ]
559 verbose addNamed [ '0.0.2', '0.0.2' ]
560 silly lockFile 62a64387-debuglog-0-0-2 debuglog@0.0.2
561 verbose lock debuglog@0.0.2 /home/vagrant/.npm/62a64387-debuglog-0-0-2.lock
562 verbose cache add [ 'core-util-is@~1.0.0', null ]
563 verbose cache add name=undefined spec="core-util-is@~1.0.0" args=["core-util-is@~1.0.0",null]
564 verbose parsed url { protocol: null,
564 verbose parsed url   slashes: null,
564 verbose parsed url   auth: null,
564 verbose parsed url   host: null,
564 verbose parsed url   port: null,
564 verbose parsed url   hostname: null,
564 verbose parsed url   hash: null,
564 verbose parsed url   search: null,
564 verbose parsed url   query: null,
564 verbose parsed url   pathname: 'core-util-is@~1.0.0',
564 verbose parsed url   path: 'core-util-is@~1.0.0',
564 verbose parsed url   href: 'core-util-is@~1.0.0' }
565 verbose cache add name="core-util-is" spec="~1.0.0" args=["core-util-is","~1.0.0"]
566 verbose parsed url { protocol: null,
566 verbose parsed url   slashes: null,
566 verbose parsed url   auth: null,
566 verbose parsed url   host: null,
566 verbose parsed url   port: null,
566 verbose parsed url   hostname: null,
566 verbose parsed url   hash: null,
566 verbose parsed url   search: null,
566 verbose parsed url   query: null,
566 verbose parsed url   pathname: '~1.0.0',
566 verbose parsed url   path: '~1.0.0',
566 verbose parsed url   href: '~1.0.0' }
567 verbose addNamed [ 'core-util-is', '~1.0.0' ]
568 verbose addNamed [ null, '>=1.0.0-0 <1.1.0-0' ]
569 silly lockFile 577b60c4-core-util-is-1-0-0 core-util-is@~1.0.0
570 verbose lock core-util-is@~1.0.0 /home/vagrant/.npm/577b60c4-core-util-is-1-0-0.lock
571 verbose cache add [ 'string_decoder@~0.10.x', null ]
572 verbose cache add name=undefined spec="string_decoder@~0.10.x" args=["string_decoder@~0.10.x",null]
573 verbose parsed url { protocol: null,
573 verbose parsed url   slashes: null,
573 verbose parsed url   auth: null,
573 verbose parsed url   host: null,
573 verbose parsed url   port: null,
573 verbose parsed url   hostname: null,
573 verbose parsed url   hash: null,
573 verbose parsed url   search: null,
573 verbose parsed url   query: null,
573 verbose parsed url   pathname: 'string_decoder@~0.10.x',
573 verbose parsed url   path: 'string_decoder@~0.10.x',
573 verbose parsed url   href: 'string_decoder@~0.10.x' }
574 verbose cache add name="string_decoder" spec="~0.10.x" args=["string_decoder","~0.10.x"]
575 verbose parsed url { protocol: null,
575 verbose parsed url   slashes: null,
575 verbose parsed url   auth: null,
575 verbose parsed url   host: null,
575 verbose parsed url   port: null,
575 verbose parsed url   hostname: null,
575 verbose parsed url   hash: null,
575 verbose parsed url   search: null,
575 verbose parsed url   query: null,
575 verbose parsed url   pathname: '~0.10.x',
575 verbose parsed url   path: '~0.10.x',
575 verbose parsed url   href: '~0.10.x' }
576 verbose addNamed [ 'string_decoder', '~0.10.x' ]
577 verbose addNamed [ null, '>=0.10.0-0 <0.11.0-0' ]
578 silly lockFile 8f75c97d-string-decoder-0-10-x string_decoder@~0.10.x
579 verbose lock string_decoder@~0.10.x /home/vagrant/.npm/8f75c97d-string-decoder-0-10-x.lock
580 silly addNameRange { name: 'string_decoder',
580 silly addNameRange   range: '>=0.10.0-0 <0.11.0-0',
580 silly addNameRange   hasData: false }
581 silly addNameRange { name: 'core-util-is',
581 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
581 silly addNameRange   hasData: false }
582 verbose url raw debuglog/0.0.2
583 verbose url resolving [ 'https://registry.npmjs.org/', './debuglog/0.0.2' ]
584 verbose url resolved https://registry.npmjs.org/debuglog/0.0.2
585 info trying registry request attempt 1 at 02:31:16
586 verbose etag "D130P7HJ5PYMER36IW553LTVW"
587 http GET https://registry.npmjs.org/debuglog/0.0.2
588 verbose url raw string_decoder
589 verbose url resolving [ 'https://registry.npmjs.org/', './string_decoder' ]
590 verbose url resolved https://registry.npmjs.org/string_decoder
591 info trying registry request attempt 1 at 02:31:16
592 verbose etag "62ZY9VB6VCLHVS4FB9IX1BIJ9"
593 http GET https://registry.npmjs.org/string_decoder
594 verbose url raw core-util-is
595 verbose url resolving [ 'https://registry.npmjs.org/', './core-util-is' ]
596 verbose url resolved https://registry.npmjs.org/core-util-is
597 info trying registry request attempt 1 at 02:31:16
598 verbose etag "8IHP9CJK3GQMC9Q21SM3T3E7B"
599 http GET https://registry.npmjs.org/core-util-is
600 error error rolling back Error: UNKNOWN, unlink '/home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/mailcomposer/test/textfile.txt'
600 error error rolling back  nodemailer@0.6.1 { [Error: UNKNOWN, unlink '/home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/mailcomposer/test/textfile.txt']
600 error error rolling back   errno: -1,
600 error error rolling back   code: 'UNKNOWN',
600 error error rolling back   path: '/home/vagrant/taskitafinal/node_modules/nodemailer/node_modules/mailcomposer/test/textfile.txt' }
601 error Error: UNKNOWN, symlink '../he/bin/he'
602 error If you need help, you may report this *entire* log,
602 error including the npm and node versions, at:
602 error     <http://github.com/isaacs/npm/issues>
603 error System Linux 3.2.0-23-generic-pae
604 error command "/usr/local/bin/node" "/usr/local/bin/npm" "install" "nodemailer"
605 error cwd /home/vagrant/taskitafinal/node_modules
606 error node -v v0.10.24
607 error npm -v 1.3.21
608 error path ../he/bin/he
609 error code UNKNOWN
610 error errno -1
611 verbose exit [ -1, true ]
